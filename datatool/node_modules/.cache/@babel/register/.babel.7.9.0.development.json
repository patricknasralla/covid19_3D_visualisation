{
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"filename\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/ParseCaseData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/ParseCaseData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/ParseCaseData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/ParseCaseData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
        "sourceFileName": "ParseCaseData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _pako = require(\"pako\");\n\nvar _csvParser = _interopRequireDefault(require(\"csv-parser\"));\n\nvar _DataUtils = require(\"./src/DataUtils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar rawData = [];\nvar parsedData = {};\n\n_fs[\"default\"].createReadStream(\"./rawData/data.csv\").pipe((0, _csvParser[\"default\"])()).on(\"data\", function (data) {\n  rawData.push(data);\n}).on(\"end\", function () {\n  // do all the things here\n  var locationPositions = _DataUtils.DataUtils.getPositionVectorsFromData(rawData);\n\n  var _DataUtils$parseDataT = _DataUtils.DataUtils.parseDataToTextureData(rawData),\n      _DataUtils$parseDataT2 = _slicedToArray(_DataUtils$parseDataT, 3),\n      textureData = _DataUtils$parseDataT2[0],\n      totalDays = _DataUtils$parseDataT2[1],\n      totalLocations = _DataUtils$parseDataT2[2];\n\n  var _DataUtils$getVertexD = _DataUtils.DataUtils.getVertexData(locationPositions),\n      _DataUtils$getVertexD2 = _slicedToArray(_DataUtils$getVertexD, 3),\n      positions = _DataUtils$getVertexD2[0],\n      locationIndices = _DataUtils$getVertexD2[1],\n      locationWeights = _DataUtils$getVertexD2[2];\n\n  parsedData = {\n    totalDays: totalDays,\n    totalLocations: totalLocations,\n    positions: positions,\n    locationIndices: locationIndices,\n    locationWeights: locationWeights\n  };\n  var output = (0, _pako.deflate)(JSON.stringify(parsedData), {\n    to: \"string\"\n  });\n\n  _fs[\"default\"].writeFile(\"./output/textureData.bin\", textureData, function (err) {\n    if (err) throw err;\n    console.log(\"textureData successfully parsed!\");\n  });\n\n  _fs[\"default\"].writeFile(\"./output/data.bin\", output, function (err) {\n    if (err) throw err;\n    console.log(\"Data successfully parsed!\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnNlQ2FzZURhdGEuanMiXSwibmFtZXMiOlsicmF3RGF0YSIsInBhcnNlZERhdGEiLCJmcyIsImNyZWF0ZVJlYWRTdHJlYW0iLCJwaXBlIiwib24iLCJkYXRhIiwicHVzaCIsImxvY2F0aW9uUG9zaXRpb25zIiwiRGF0YVV0aWxzIiwiZ2V0UG9zaXRpb25WZWN0b3JzRnJvbURhdGEiLCJwYXJzZURhdGFUb1RleHR1cmVEYXRhIiwidGV4dHVyZURhdGEiLCJ0b3RhbERheXMiLCJ0b3RhbExvY2F0aW9ucyIsImdldFZlcnRleERhdGEiLCJwb3NpdGlvbnMiLCJsb2NhdGlvbkluZGljZXMiLCJsb2NhdGlvbldlaWdodHMiLCJvdXRwdXQiLCJKU09OIiwic3RyaW5naWZ5IiwidG8iLCJ3cml0ZUZpbGUiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQWVBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEVBQWhCO0FBQ0EsSUFBSUMsVUFBVSxHQUFHLEVBQWpCOztBQUVBQyxlQUFHQyxnQkFBSCxDQUFvQixvQkFBcEIsRUFDR0MsSUFESCxDQUNRLDRCQURSLEVBRUdDLEVBRkgsQ0FFTSxNQUZOLEVBRWMsVUFBQUMsSUFBSSxFQUFJO0FBQ2xCTixFQUFBQSxPQUFPLENBQUNPLElBQVIsQ0FBYUQsSUFBYjtBQUNELENBSkgsRUFLR0QsRUFMSCxDQUtNLEtBTE4sRUFLYSxZQUFNO0FBQ2Y7QUFDQSxNQUFNRyxpQkFBaUIsR0FBR0MscUJBQVVDLDBCQUFWLENBQXFDVixPQUFyQyxDQUExQjs7QUFGZSw4QkFPWFMscUJBQVVFLHNCQUFWLENBQWlDWCxPQUFqQyxDQVBXO0FBQUE7QUFBQSxNQUliWSxXQUphO0FBQUEsTUFLYkMsU0FMYTtBQUFBLE1BTWJDLGNBTmE7O0FBQUEsOEJBWVhMLHFCQUFVTSxhQUFWLENBQXdCUCxpQkFBeEIsQ0FaVztBQUFBO0FBQUEsTUFTYlEsU0FUYTtBQUFBLE1BVWJDLGVBVmE7QUFBQSxNQVdiQyxlQVhhOztBQWFmakIsRUFBQUEsVUFBVSxHQUFHO0FBQ1hZLElBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUVYQyxJQUFBQSxjQUFjLEVBQWRBLGNBRlc7QUFHWEUsSUFBQUEsU0FBUyxFQUFUQSxTQUhXO0FBSVhDLElBQUFBLGVBQWUsRUFBZkEsZUFKVztBQUtYQyxJQUFBQSxlQUFlLEVBQWZBO0FBTFcsR0FBYjtBQU9BLE1BQU1DLE1BQU0sR0FBRyxtQkFBUUMsSUFBSSxDQUFDQyxTQUFMLENBQWVwQixVQUFmLENBQVIsRUFBb0M7QUFBRXFCLElBQUFBLEVBQUUsRUFBRTtBQUFOLEdBQXBDLENBQWY7O0FBRUFwQixpQkFBR3FCLFNBQUgsQ0FBYSwwQkFBYixFQUF5Q1gsV0FBekMsRUFBc0QsVUFBQVksR0FBRyxFQUFJO0FBQzNELFFBQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0QsR0FIRDs7QUFJQXhCLGlCQUFHcUIsU0FBSCxDQUFhLG1CQUFiLEVBQWtDSixNQUFsQyxFQUEwQyxVQUFBSyxHQUFHLEVBQUk7QUFDL0MsUUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDRCxHQUhEO0FBSUQsQ0FuQ0giLCJzb3VyY2VSb290IjoiL1VzZXJzL3BhdHJpY2tuYXNyYWxsYS9XZWJzdG9ybVByb2plY3RzL2NvdmlkMTlfdmlzdWFsaXNlcl9kYXRhLyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiAgIERhdGEgUGFyc2VyIGZvciBDT1ZJRC0xOSB2aXN1YWxpc2VyXG4gKlxuICogICAtIHR1cm5zIGNzdiBpbnRvIHVzYWJsZSBvYmplY3QuXG4gKiAgIC0gY2FsY3VsYXRlcyBnbG9iYWwgbG9jYXRpb25zIG9mIGRhdGFQb2ludHNcbiAqICAgLSByZXR1cm5zIHtcbiAqICAgICB0b3RhbERheXM6IG51bWJlcixcbiAqICAgICB0b3RhbExvY2F0aW9uczogbnVtYmVyLFxuICogICAgIGxvY2F0aW9uSW5kaWNlczogbnVtYmVyW10sXG4gKiAgICAgbG9jYXRpb25XZWlnaHRzOiBudW1iZXJbXSxcbiAqICAgICB2ZXJ0ZXhQb3NpdGlvbnM6IFZlY3RvcjNbXSxcbiAqICAgICB0ZXh0dXJlRGF0YTogVWludDhBcnJheSxcbiAqICAgfVxuICogKi9cblxuaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xuaW1wb3J0IHsgaW5mbGF0ZSwgZGVmbGF0ZSB9IGZyb20gXCJwYWtvXCI7XG5pbXBvcnQgY3N2UGFyc2VyIGZyb20gXCJjc3YtcGFyc2VyXCI7XG5pbXBvcnQgeyBEYXRhVXRpbHMgfSBmcm9tIFwiLi9zcmMvRGF0YVV0aWxzXCI7XG5cbmNvbnN0IHJhd0RhdGEgPSBbXTtcbmxldCBwYXJzZWREYXRhID0ge307XG5cbmZzLmNyZWF0ZVJlYWRTdHJlYW0oXCIuL3Jhd0RhdGEvZGF0YS5jc3ZcIilcbiAgLnBpcGUoY3N2UGFyc2VyKCkpXG4gIC5vbihcImRhdGFcIiwgZGF0YSA9PiB7XG4gICAgcmF3RGF0YS5wdXNoKGRhdGEpO1xuICB9KVxuICAub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgIC8vIGRvIGFsbCB0aGUgdGhpbmdzIGhlcmVcbiAgICBjb25zdCBsb2NhdGlvblBvc2l0aW9ucyA9IERhdGFVdGlscy5nZXRQb3NpdGlvblZlY3RvcnNGcm9tRGF0YShyYXdEYXRhKTtcbiAgICBjb25zdCBbXG4gICAgICB0ZXh0dXJlRGF0YSxcbiAgICAgIHRvdGFsRGF5cyxcbiAgICAgIHRvdGFsTG9jYXRpb25zXG4gICAgXSA9IERhdGFVdGlscy5wYXJzZURhdGFUb1RleHR1cmVEYXRhKHJhd0RhdGEpO1xuICAgIGNvbnN0IFtcbiAgICAgIHBvc2l0aW9ucyxcbiAgICAgIGxvY2F0aW9uSW5kaWNlcyxcbiAgICAgIGxvY2F0aW9uV2VpZ2h0c1xuICAgIF0gPSBEYXRhVXRpbHMuZ2V0VmVydGV4RGF0YShsb2NhdGlvblBvc2l0aW9ucyk7XG4gICAgcGFyc2VkRGF0YSA9IHtcbiAgICAgIHRvdGFsRGF5cyxcbiAgICAgIHRvdGFsTG9jYXRpb25zLFxuICAgICAgcG9zaXRpb25zLFxuICAgICAgbG9jYXRpb25JbmRpY2VzLFxuICAgICAgbG9jYXRpb25XZWlnaHRzXG4gICAgfTtcbiAgICBjb25zdCBvdXRwdXQgPSBkZWZsYXRlKEpTT04uc3RyaW5naWZ5KHBhcnNlZERhdGEpLCB7IHRvOiBcInN0cmluZ1wiIH0pO1xuXG4gICAgZnMud3JpdGVGaWxlKFwiLi9vdXRwdXQvdGV4dHVyZURhdGEuYmluXCIsIHRleHR1cmVEYXRhLCBlcnIgPT4ge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgY29uc29sZS5sb2coXCJ0ZXh0dXJlRGF0YSBzdWNjZXNzZnVsbHkgcGFyc2VkIVwiKTtcbiAgICB9KTtcbiAgICBmcy53cml0ZUZpbGUoXCIuL291dHB1dC9kYXRhLmJpblwiLCBvdXRwdXQsIGVyciA9PiB7XG4gICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICBjb25zb2xlLmxvZyhcIkRhdGEgc3VjY2Vzc2Z1bGx5IHBhcnNlZCFcIik7XG4gICAgfSk7XG4gIH0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ParseCaseData.js"
      ],
      "names": [
        "rawData",
        "parsedData",
        "fs",
        "createReadStream",
        "pipe",
        "on",
        "data",
        "push",
        "locationPositions",
        "DataUtils",
        "getPositionVectorsFromData",
        "parseDataToTextureData",
        "textureData",
        "totalDays",
        "totalLocations",
        "getVertexData",
        "positions",
        "locationIndices",
        "locationWeights",
        "output",
        "JSON",
        "stringify",
        "to",
        "writeFile",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;AAeA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,EAAhB;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEAC,eAAGC,gBAAH,CAAoB,oBAApB,EACGC,IADH,CACQ,4BADR,EAEGC,EAFH,CAEM,MAFN,EAEc,UAAAC,IAAI,EAAI;AAClBN,EAAAA,OAAO,CAACO,IAAR,CAAaD,IAAb;AACD,CAJH,EAKGD,EALH,CAKM,KALN,EAKa,YAAM;AACf;AACA,MAAMG,iBAAiB,GAAGC,qBAAUC,0BAAV,CAAqCV,OAArC,CAA1B;;AAFe,8BAOXS,qBAAUE,sBAAV,CAAiCX,OAAjC,CAPW;AAAA;AAAA,MAIbY,WAJa;AAAA,MAKbC,SALa;AAAA,MAMbC,cANa;;AAAA,8BAYXL,qBAAUM,aAAV,CAAwBP,iBAAxB,CAZW;AAAA;AAAA,MASbQ,SATa;AAAA,MAUbC,eAVa;AAAA,MAWbC,eAXa;;AAafjB,EAAAA,UAAU,GAAG;AACXY,IAAAA,SAAS,EAATA,SADW;AAEXC,IAAAA,cAAc,EAAdA,cAFW;AAGXE,IAAAA,SAAS,EAATA,SAHW;AAIXC,IAAAA,eAAe,EAAfA,eAJW;AAKXC,IAAAA,eAAe,EAAfA;AALW,GAAb;AAOA,MAAMC,MAAM,GAAG,mBAAQC,IAAI,CAACC,SAAL,CAAepB,UAAf,CAAR,EAAoC;AAAEqB,IAAAA,EAAE,EAAE;AAAN,GAApC,CAAf;;AAEApB,iBAAGqB,SAAH,CAAa,0BAAb,EAAyCX,WAAzC,EAAsD,UAAAY,GAAG,EAAI;AAC3D,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAHD;;AAIAxB,iBAAGqB,SAAH,CAAa,mBAAb,EAAkCJ,MAAlC,EAA0C,UAAAK,GAAG,EAAI;AAC/C,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,GAHD;AAID,CAnCH",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
      "sourcesContent": [
        "/*\n *   Data Parser for COVID-19 visualiser\n *\n *   - turns csv into usable object.\n *   - calculates global locations of dataPoints\n *   - returns {\n *     totalDays: number,\n *     totalLocations: number,\n *     locationIndices: number[],\n *     locationWeights: number[],\n *     vertexPositions: Vector3[],\n *     textureData: Uint8Array,\n *   }\n * */\n\nimport fs from \"fs\";\nimport { inflate, deflate } from \"pako\";\nimport csvParser from \"csv-parser\";\nimport { DataUtils } from \"./src/DataUtils\";\n\nconst rawData = [];\nlet parsedData = {};\n\nfs.createReadStream(\"./rawData/data.csv\")\n  .pipe(csvParser())\n  .on(\"data\", data => {\n    rawData.push(data);\n  })\n  .on(\"end\", () => {\n    // do all the things here\n    const locationPositions = DataUtils.getPositionVectorsFromData(rawData);\n    const [\n      textureData,\n      totalDays,\n      totalLocations\n    ] = DataUtils.parseDataToTextureData(rawData);\n    const [\n      positions,\n      locationIndices,\n      locationWeights\n    ] = DataUtils.getVertexData(locationPositions);\n    parsedData = {\n      totalDays,\n      totalLocations,\n      positions,\n      locationIndices,\n      locationWeights\n    };\n    const output = deflate(JSON.stringify(parsedData), { to: \"string\" });\n\n    fs.writeFile(\"./output/textureData.bin\", textureData, err => {\n      if (err) throw err;\n      console.log(\"textureData successfully parsed!\");\n    });\n    fs.writeFile(\"./output/data.bin\", output, err => {\n      if (err) throw err;\n      console.log(\"Data successfully parsed!\");\n    });\n  });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585323540254
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"filename\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataParser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataParser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataParser.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataParser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
        "sourceFileName": "DataParser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataParser = void 0;\n\nvar _three = require(\"three\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataParser = /*#__PURE__*/function () {\n  function DataParser() {\n    _classCallCheck(this, DataParser);\n  }\n\n  _createClass(DataParser, null, [{\n    key: \"getPositionVectorsFromData\",\n    value: function getPositionVectorsFromData(csvData) {\n      var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var coordinateList = [];\n      csvData.forEach(function (row) {\n        var lat = Number(row.Lat);\n\n        var _long = Number(row.Long);\n\n        var phi = (90 - lat) * (Math.PI / 180);\n        var theta = (_long + 180) * (Math.PI / 180);\n        var x = -(radius * Math.sin(phi) * Math.cos(theta));\n        var z = radius * Math.sin(phi) * Math.sin(theta);\n        var y = radius * Math.cos(phi);\n        coordinateList.push(new _three.Vector3(x, y, z));\n      });\n      return coordinateList;\n    }\n  }, {\n    key: \"getConfirmedCasesAsTextureData\",\n    value: function getConfirmedCasesAsTextureData(data) {\n      // get column names for rawData\n      var keys = Object.keys(data[0]).slice(4); // get total days of rawData and total locations\n\n      var totalDays = keys.length + 1;\n      var totalLocations = data.length; // instantiate TypedArray\n\n      var textureData = new Uint8Array(totalDays * totalLocations * 4); // fill the first entry of the texture with 0s so that you always start with a clean world\n\n      for (var i = 0; i < totalLocations * 4; i++) {\n        textureData[i] = 0;\n      } // create ArrayBuffer and DataView for bitwise operations.\n\n\n      var buffer = new ArrayBuffer(4);\n      var view = new DataView(buffer); // populate textureData\n\n      keys.forEach(function (key, i) {\n        data.forEach(function (location, j) {\n          var caseNumber = Number(location[key]);\n          var logFloatValue;\n          var highPIntValue;\n\n          if (caseNumber !== 0) {\n            logFloatValue = Math.log10(caseNumber + 1);\n            highPIntValue = Math.floor(logFloatValue * 100000000);\n          }\n\n          view.setUint32(0, highPIntValue);\n          var stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n          textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n          textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n          textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n          textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n        });\n      });\n      return [textureData, totalDays, totalLocations];\n    }\n  }, {\n    key: \"getDataFromCSV\",\n    value: function () {\n      var _getDataFromCSV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(path) {\n        var response, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(path, {\n                  mode: \"no-cors\"\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.text();\n\n              case 5:\n                data = _context.sent;\n                _context.next = 8;\n                return neatCsv(data);\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getDataFromCSV(_x) {\n        return _getDataFromCSV.apply(this, arguments);\n      }\n\n      return getDataFromCSV;\n    }()\n  }]);\n\n  return DataParser;\n}();\n\nexports.DataParser = DataParser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFQYXJzZXIuanMiXSwibmFtZXMiOlsiRGF0YVBhcnNlciIsImNzdkRhdGEiLCJyYWRpdXMiLCJjb29yZGluYXRlTGlzdCIsImZvckVhY2giLCJyb3ciLCJsYXQiLCJOdW1iZXIiLCJMYXQiLCJsb25nIiwiTG9uZyIsInBoaSIsIk1hdGgiLCJQSSIsInRoZXRhIiwieCIsInNpbiIsImNvcyIsInoiLCJ5IiwicHVzaCIsIlZlY3RvcjMiLCJkYXRhIiwia2V5cyIsIk9iamVjdCIsInNsaWNlIiwidG90YWxEYXlzIiwibGVuZ3RoIiwidG90YWxMb2NhdGlvbnMiLCJ0ZXh0dXJlRGF0YSIsIlVpbnQ4QXJyYXkiLCJpIiwiYnVmZmVyIiwiQXJyYXlCdWZmZXIiLCJ2aWV3IiwiRGF0YVZpZXciLCJrZXkiLCJsb2NhdGlvbiIsImoiLCJjYXNlTnVtYmVyIiwibG9nRmxvYXRWYWx1ZSIsImhpZ2hQSW50VmFsdWUiLCJsb2cxMCIsImZsb29yIiwic2V0VWludDMyIiwic3RyaWRlIiwiZ2V0VWludDgiLCJwYXRoIiwiZmV0Y2giLCJtb2RlIiwicmVzcG9uc2UiLCJ0ZXh0IiwibmVhdENzdiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFFYUEsVTs7Ozs7OzsrQ0FDdUJDLE8sRUFBcUI7QUFBQSxVQUFaQyxNQUFZLHVFQUFILENBQUc7QUFDckQsVUFBTUMsY0FBYyxHQUFHLEVBQXZCO0FBRUFGLE1BQUFBLE9BQU8sQ0FBQ0csT0FBUixDQUFnQixVQUFBQyxHQUFHLEVBQUk7QUFDckIsWUFBTUMsR0FBRyxHQUFHQyxNQUFNLENBQUNGLEdBQUcsQ0FBQ0csR0FBTCxDQUFsQjs7QUFDQSxZQUFNQyxLQUFJLEdBQUdGLE1BQU0sQ0FBQ0YsR0FBRyxDQUFDSyxJQUFMLENBQW5COztBQUNBLFlBQU1DLEdBQUcsR0FBRyxDQUFDLEtBQUtMLEdBQU4sS0FBY00sSUFBSSxDQUFDQyxFQUFMLEdBQVUsR0FBeEIsQ0FBWjtBQUNBLFlBQU1DLEtBQUssR0FB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R0FBMEJQLElBQUksQ0FBQ1ksUUFBTCxDQUFjLENBQWQsQ0FBcEQ7QUFDQWpCLFVBQUFBLFdBQVcsQ0FBQ2dCLE1BQU0sR0FBRyxDQUFWLENBQVgsR0FBMEJKLGFBQWEsS0FBSyxDQUFsQixHQUFzQixDQUF0QixHQUEwQlAsSUFBSSxDQUFDWSxRQUFMLENBQWMsQ0FBZCxDQUFwRDtBQUNBakIsVUFBQUEsV0FBVyxDQUFDZ0IsTUFBTSxHQUFHLENBQVYsQ0FBWCxHQUEwQkosYUFBYSxLQUFLLENBQWxCLEdBQXNCLENBQXRCLEdBQTBCUCxJQUFJLENBQUNZLFFBQUwsQ0FBYyxDQUFkLENBQXBEO0FBQ0QsU0FmRDtBQWdCRCxPQWpCRDtBQW1CQSxhQUFPLENBQUNqQixXQUFELEVBQWNILFNBQWQsRUFBeUJFLGNBQXpCLENBQVA7QUFDRDs7OztxR0FFMkJtQixJOzs7Ozs7O3VCQUNMQyxLQUFLLENBQUNELElBQUQsRUFBTztBQUFFRSxrQkFBQUEsSUFBSSxFQUFFO0FBQVIsaUJBQVAsQzs7O0FBQXRCQyxnQkFBQUEsUTs7dUJBQ2FBLFFBQVEsQ0FBQ0MsSUFBVCxFOzs7QUFBYjdCLGdCQUFBQSxJOzt1QkFFUzhCLE9BQU8sQ0FBQzlCLElBQUQsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcGF0cmlja25hc3JhbGxhL1dlYnN0b3JtUHJvamVjdHMvY292aWQxOV92aXN1YWxpc2VyX2RhdGEvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlY3RvcjMsIERhdGFUZXh0dXJlLCBSR0JBRm9ybWF0LCBVbnNpZ25lZEJ5dGVUeXBlIH0gZnJvbSBcInRocmVlXCI7XG5cbmV4cG9ydCBjbGFzcyBEYXRhUGFyc2VyIHtcbiAgc3RhdGljIGdldFBvc2l0aW9uVmVjdG9yc0Zyb21EYXRhKGNzdkRhdGEsIHJhZGl1cyA9IDEpIHtcbiAgICBjb25zdCBjb29yZGluYXRlTGlzdCA9IFtdO1xuXG4gICAgY3N2RGF0YS5mb3JFYWNoKHJvdyA9PiB7XG4gICAgICBjb25zdCBsYXQgPSBOdW1iZXIocm93LkxhdCk7XG4gICAgICBjb25zdCBsb25nID0gTnVtYmVyKHJvdy5Mb25nKTtcbiAgICAgIGNvbnN0IHBoaSA9ICg5MCAtIGxhdCkgKiAoTWF0aC5QSSAvIDE4MCk7XG4gICAgICBjb25zdCB0aGV0YSA9IChsb25nICsgMTgwKSAqIChNYXRoLlBJIC8gMTgwKTtcbiAgICAgIGNvbnN0IHggPSAtKHJhZGl1cyAqIE1hdGguc2luKHBoaSkgKiBNYXRoLmNvcyh0aGV0YSkpO1xuICAgICAgY29uc3QgeiA9IHJhZGl1cyAqIE1hdGguc2luKHBoaSkgKiBNYXRoLnNpbih0aGV0YSk7XG4gICAgICBjb25zdCB5ID0gcmFkaXVzICogTWF0aC5jb3MocGhpKTtcbiAgICAgIGNvb3JkaW5hdGVMaXN0LnB1c2gobmV3IFZlY3RvcjMoeCwgeSwgeikpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNvb3JkaW5hdGVMaXN0O1xuICB9XG5cbiAgc3RhdGljIGdldENvbmZpcm1lZENhc2VzQXNUZXh0dXJlRGF0YShkYXRhKSB7XG4gICAgLy8gZ2V0IGNvbHVtbiBuYW1lcyBmb3IgcmF3RGF0YVxuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhkYXRhWzBdKS5zbGljZSg0KTtcblxuICAgIC8vIGdldCB0b3RhbCBkYXlzIG9mIHJhd0RhdGEgYW5kIHRvdGFsIGxvY2F0aW9uc1xuICAgIGNvbnN0IHRvdGFsRGF5cyA9IGtleXMubGVuZ3RoICsgMTtcbiAgICBjb25zdCB0b3RhbExvY2F0aW9ucyA9IGRhdGEubGVuZ3RoO1xuXG4gICAgLy8gaW5zdGFudGlhdGUgVHlwZWRBcnJheVxuICAgIGNvbnN0IHRleHR1cmVEYXRhID0gbmV3IFVpbnQ4QXJyYXkodG90YWxEYXlzICogdG90YWxMb2NhdGlvbnMgKiA0KTtcblxuICAgIC8vIGZpbGwgdGhlIGZpcnN0IGVudHJ5IG9mIHRoZSB0ZXh0dXJlIHdpdGggMHMgc28gdGhhdCB5b3UgYWx3YXlzIHN0YXJ0IHdpdGggYSBjbGVhbiB3b3JsZFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG90YWxMb2NhdGlvbnMgKiA0OyBpKyspIHtcbiAgICAgIHRleHR1cmVEYXRhW2ldID0gMDtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgQXJyYXlCdWZmZXIgYW5kIERhdGFWaWV3IGZvciBiaXR3aXNlIG9wZXJhdGlvbnMuXG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKDQpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcblxuICAgIC8vIHBvcHVsYXRlIHRleHR1cmVEYXRhXG4gICAga2V5cy5mb3JFYWNoKChrZXksIGkpID0+IHtcbiAgICAgIGRhdGEuZm9yRWFjaCgobG9jYXRpb24sIGopID0+IHtcbiAgICAgICAgY29uc3QgY2FzZU51bWJlciA9IE51bWJlcihsb2NhdGlvbltrZXldKTtcbiAgICAgICAgbGV0IGxvZ0Zsb2F0VmFsdWU7XG4gICAgICAgIGxldCBoaWdoUEludFZhbHVlO1xuICAgICAgICBpZiAoY2FzZU51bWJlciAhPT0gMCkge1xuICAgICAgICAgIGxvZ0Zsb2F0VmFsdWUgPSBNYXRoLmxvZzEwKGNhc2VOdW1iZXIgKyAxKTtcbiAgICAgICAgICBoaWdoUEludFZhbHVlID0gTWF0aC5mbG9vcihsb2dGbG9hdFZhbHVlICogMTAwMDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgICB2aWV3LnNldFVpbnQzMigwLCBoaWdoUEludFZhbHVlKTtcblxuICAgICAgICBjb25zdCBzdHJpZGUgPSB0b3RhbExvY2F0aW9ucyAqIDQgKyBpICogZGF0YS5sZW5ndGggKiA0ICsgaiAqIDQ7XG4gICAgICAgIHRleHR1cmVEYXRhW3N0cmlkZV0gPSBoaWdoUEludFZhbHVlID09PSAwID8gMCA6IHZpZXcuZ2V0VWludDgoMCk7XG4gICAgICAgIHRleHR1cmVEYXRhW3N0cmlkZSArIDFdID0gaGlnaFBJbnRWYWx1ZSA9PT0gMCA/IDAgOiB2aWV3LmdldFVpbnQ4KDEpO1xuICAgICAgICB0ZXh0dXJlRGF0YVtzdHJpZGUgKyAzXSA9IGhpZ2hQSW50VmFsdWUgPT09IDAgPyAwIDogdmlldy5nZXRVaW50OCgyKTtcbiAgICAgICAgdGV4dHVyZURhdGFbc3RyaWRlICsgNF0gPSBoaWdoUEludFZhbHVlID09PSAwID8gMCA6IHZpZXcuZ2V0VWludDgoMyk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJldHVybiBbdGV4dHVyZURhdGEsIHRvdGFsRGF5cywgdG90YWxMb2NhdGlvbnNdO1xuICB9XG5cbiAgc3RhdGljIGFzeW5jIGdldERhdGFGcm9tQ1NWKHBhdGgpIHtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChwYXRoLCB7IG1vZGU6IFwibm8tY29yc1wiIH0pO1xuICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuXG4gICAgcmV0dXJuIGF3YWl0IG5lYXRDc3YoZGF0YSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "DataParser.js"
      ],
      "names": [
        "DataParser",
        "csvData",
        "radius",
        "coordinateList",
        "forEach",
        "row",
        "lat",
        "Number",
        "Lat",
        "long",
        "Long",
        "phi",
        "Math",
        "PI",
        "theta",
        "x",
        "sin",
        "cos",
        "z",
        "y",
        "push",
        "Vector3",
        "data",
        "keys",
        "Object",
        "slice",
        "totalDays",
        "length",
        "totalLocations",
        "textureData",
        "Uint8Array",
        "i",
        "buffer",
        "ArrayBuffer",
        "view",
        "DataView",
        "key",
        "location",
        "j",
        "caseNumber",
        "logFloatValue",
        "highPIntValue",
        "log10",
        "floor",
        "setUint32",
        "stride",
        "getUint8",
        "path",
        "fetch",
        "mode",
        "response",
        "text",
        "neatCsv"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
      "sourcesContent": [
        "import { Vector3, DataTexture, RGBAFormat, UnsignedByteType } from \"three\";\n\nexport class DataParser {\n  static getPositionVectorsFromData(csvData, radius = 1) {\n    const coordinateList = [];\n\n    csvData.forEach(row => {\n      const lat = Number(row.Lat);\n      const long = Number(row.Long);\n      const phi = (90 - lat) * (Math.PI / 180);\n      const theta = (long + 180) * (Math.PI / 180);\n      const x = -(radius * Math.sin(phi) * Math.cos(theta));\n      const z = radius * Math.sin(phi) * Math.sin(theta);\n      const y = radius * Math.cos(phi);\n      coordinateList.push(new Vector3(x, y, z));\n    });\n\n    return coordinateList;\n  }\n\n  static getConfirmedCasesAsTextureData(data) {\n    // get column names for rawData\n    const keys = Object.keys(data[0]).slice(4);\n\n    // get total days of rawData and total locations\n    const totalDays = keys.length + 1;\n    const totalLocations = data.length;\n\n    // instantiate TypedArray\n    const textureData = new Uint8Array(totalDays * totalLocations * 4);\n\n    // fill the first entry of the texture with 0s so that you always start with a clean world\n    for (let i = 0; i < totalLocations * 4; i++) {\n      textureData[i] = 0;\n    }\n\n    // create ArrayBuffer and DataView for bitwise operations.\n    const buffer = new ArrayBuffer(4);\n    const view = new DataView(buffer);\n\n    // populate textureData\n    keys.forEach((key, i) => {\n      data.forEach((location, j) => {\n        const caseNumber = Number(location[key]);\n        let logFloatValue;\n        let highPIntValue;\n        if (caseNumber !== 0) {\n          logFloatValue = Math.log10(caseNumber + 1);\n          highPIntValue = Math.floor(logFloatValue * 100000000);\n        }\n        view.setUint32(0, highPIntValue);\n\n        const stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n        textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n        textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n        textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n        textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n      });\n    });\n\n    return [textureData, totalDays, totalLocations];\n  }\n\n  static async getDataFromCSV(path) {\n    let response = await fetch(path, { mode: \"no-cors\" });\n    let data = await response.text();\n\n    return await neatCsv(data);\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585215799588
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"filename\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataUtils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/DataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
        "sourceFileName": "DataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataUtils = void 0;\n\nvar _three = require(\"three\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataUtils = /*#__PURE__*/function () {\n  function DataUtils() {\n    _classCallCheck(this, DataUtils);\n  }\n\n  _createClass(DataUtils, null, [{\n    key: \"getPositionVectorsFromData\",\n    value: function getPositionVectorsFromData(csvData) {\n      var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var coordinateList = [];\n      csvData.forEach(function (row) {\n        var lat = Number(row.Lat);\n\n        var _long = Number(row.Long);\n\n        var phi = (90 - lat) * (Math.PI / 180);\n        var theta = (_long + 180) * (Math.PI / 180);\n        var x = -(radius * Math.sin(phi) * Math.cos(theta));\n        var z = radius * Math.sin(phi) * Math.sin(theta);\n        var y = radius * Math.cos(phi);\n        coordinateList.push(new _three.Vector3(x, y, z));\n      });\n      return coordinateList;\n    }\n  }, {\n    key: \"parseDataToTextureData\",\n    value: function parseDataToTextureData(data) {\n      // get column names for rawData\n      var keys = Object.keys(data[0]).slice(4); // get total days of rawData and total locations\n\n      var totalDays = keys.length + 1;\n      var totalLocations = data.length; // instantiate TypedArray\n\n      var textureData = new Uint8Array(totalDays * totalLocations * 4); // fill the first entry of the texture with 0s so that you always start with a clean world\n\n      for (var i = 0; i < totalLocations * 4; i++) {\n        textureData[i] = 0;\n      } // create ArrayBuffer and DataView for bitwise operations.\n\n\n      var buffer = new ArrayBuffer(4);\n      var view = new DataView(buffer); // populate textureData\n\n      keys.forEach(function (key, i) {\n        data.forEach(function (location, j) {\n          var caseNumber = Number(location[key]);\n          var logFloatValue;\n          var highPIntValue;\n\n          if (caseNumber !== 0) {\n            logFloatValue = Math.log10(caseNumber + 1);\n            highPIntValue = Math.floor(logFloatValue * 100000000);\n          }\n\n          view.setUint32(0, highPIntValue);\n          var stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n          textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n          textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n          textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n          textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n        });\n      });\n      return [textureData, totalDays, totalLocations];\n    }\n  }, {\n    key: \"getVertexData\",\n    value: function getVertexData(locations) {\n      var placementGeometry = new _three.IcosahedronGeometry(1, 7);\n      var positions = [];\n      var locationIndices = [];\n      var locationWeights = [];\n\n      for (var i = 0; i < placementGeometry.vertices.length; i++) {\n        var positionWeights = calculateBoneWeights(placementGeometry.vertices[i], locations);\n\n        if (!!positionWeights) {\n          positions.push(placementGeometry.vertices[i].x, placementGeometry.vertices[i].y, placementGeometry.vertices[i].z);\n          positionWeights.forEach(function (position) {\n            locationIndices.push(position.index);\n            locationWeights.push(position.weight);\n          });\n        }\n      }\n\n      function calculateBoneWeights(vertex, countryVectors) {\n        // find closest 4 positions\n        var distanceList = [];\n        countryVectors.forEach(function (position, index) {\n          // consider using distanceToSquared...\n          var distance = vertex.distanceTo(position);\n          distanceList.push({\n            index: index,\n            distance: distance\n          });\n        });\n        distanceList.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        var activePositions = distanceList.slice(0, 4); // calculate weights (note, you're gonna want to play with the cutoff...\n\n        activePositions.forEach(function (position) {\n          // set a cutoff for far away values (to stop values passing through sphere)\n          if (position.distance > 0.4) position.weight = 0.0;else {\n            // normalise remaining distances to value between 0 and 50\n            var calcDistance = position.distance / 0.4 * 50; // weight = normalised inverse square of normalised distance\n\n            position.weight = 1 / (calcDistance * calcDistance + 1);\n          }\n        });\n        if (activePositions.every(function (position) {\n          return position.weight === 0;\n        })) return null;\n        return activePositions;\n      }\n\n      console.log(placementGeometry.vertices.length * 3);\n      console.log(positions.length);\n      return [positions, locationIndices, locationWeights];\n    }\n  }]);\n\n  return DataUtils;\n}();\n\nexports.DataUtils = DataUtils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "DataUtils.js"
      ],
      "names": [
        "DataUtils",
        "csvData",
        "radius",
        "coordinateList",
        "forEach",
        "row",
        "lat",
        "Number",
        "Lat",
        "long",
        "Long",
        "phi",
        "Math",
        "PI",
        "theta",
        "x",
        "sin",
        "cos",
        "z",
        "y",
        "push",
        "Vector3",
        "data",
        "keys",
        "Object",
        "slice",
        "totalDays",
        "length",
        "totalLocations",
        "textureData",
        "Uint8Array",
        "i",
        "buffer",
        "ArrayBuffer",
        "view",
        "DataView",
        "key",
        "location",
        "j",
        "caseNumber",
        "logFloatValue",
        "highPIntValue",
        "log10",
        "floor",
        "setUint32",
        "stride",
        "getUint8",
        "locations",
        "placementGeometry",
        "IcosahedronGeometry",
        "positions",
        "locationIndices",
        "locationWeights",
        "vertices",
        "positionWeights",
        "calculateBoneWeights",
        "position",
        "index",
        "weight",
        "vertex",
        "countryVectors",
        "distanceList",
        "distance",
        "distanceTo",
        "sort",
        "a",
        "b",
        "activePositions",
        "calcDistance",
        "every",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/src/",
      "sourcesContent": [
        "import { Vector3, IcosahedronGeometry } from \"three\";\n\nexport class DataUtils {\n  static getPositionVectorsFromData(csvData, radius = 1) {\n    const coordinateList = [];\n\n    csvData.forEach(row => {\n      const lat = Number(row.Lat);\n      const long = Number(row.Long);\n      const phi = (90 - lat) * (Math.PI / 180);\n      const theta = (long + 180) * (Math.PI / 180);\n      const x = -(radius * Math.sin(phi) * Math.cos(theta));\n      const z = radius * Math.sin(phi) * Math.sin(theta);\n      const y = radius * Math.cos(phi);\n      coordinateList.push(new Vector3(x, y, z));\n    });\n\n    return coordinateList;\n  }\n\n  static parseDataToTextureData(data) {\n    // get column names for rawData\n    const keys = Object.keys(data[0]).slice(4);\n\n    // get total days of rawData and total locations\n    const totalDays = keys.length + 1;\n    const totalLocations = data.length;\n\n    // instantiate TypedArray\n    const textureData = new Uint8Array(totalDays * totalLocations * 4);\n\n    // fill the first entry of the texture with 0s so that you always start with a clean world\n    for (let i = 0; i < totalLocations * 4; i++) {\n      textureData[i] = 0;\n    }\n\n    // create ArrayBuffer and DataView for bitwise operations.\n    const buffer = new ArrayBuffer(4);\n    const view = new DataView(buffer);\n\n    // populate textureData\n    keys.forEach((key, i) => {\n      data.forEach((location, j) => {\n        const caseNumber = Number(location[key]);\n        let logFloatValue;\n        let highPIntValue;\n        if (caseNumber !== 0) {\n          logFloatValue = Math.log10(caseNumber + 1);\n          highPIntValue = Math.floor(logFloatValue * 100000000);\n        }\n        view.setUint32(0, highPIntValue);\n\n        const stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n        textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n        textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n        textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n        textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n      });\n    });\n\n    return [textureData, totalDays, totalLocations];\n  }\n\n  static getVertexData(locations) {\n    const placementGeometry = new IcosahedronGeometry(1, 7);\n    const positions = [];\n    const locationIndices = [];\n    const locationWeights = [];\n\n    for (let i = 0; i < placementGeometry.vertices.length; i++) {\n      const positionWeights = calculateBoneWeights(\n        placementGeometry.vertices[i],\n        locations\n      );\n\n      if (!!positionWeights) {\n        positions.push(\n          placementGeometry.vertices[i].x,\n          placementGeometry.vertices[i].y,\n          placementGeometry.vertices[i].z\n        );\n        positionWeights.forEach(position => {\n          locationIndices.push(position.index);\n          locationWeights.push(position.weight);\n        });\n      }\n    }\n\n    function calculateBoneWeights(vertex, countryVectors) {\n      // find closest 4 positions\n      const distanceList = [];\n      countryVectors.forEach((position, index) => {\n        // consider using distanceToSquared...\n        const distance = vertex.distanceTo(position);\n        distanceList.push({\n          index,\n          distance\n        });\n      });\n      distanceList.sort((a, b) => a.distance - b.distance);\n\n      const activePositions = distanceList.slice(0, 4);\n\n      // calculate weights (note, you're gonna want to play with the cutoff...\n      activePositions.forEach(position => {\n        // set a cutoff for far away values (to stop values passing through sphere)\n        if (position.distance > 0.4) position.weight = 0.0;\n        else {\n          // normalise remaining distances to value between 0 and 50\n          const calcDistance = (position.distance / 0.4) * 50;\n          // weight = normalised inverse square of normalised distance\n          position.weight = 1 / (calcDistance * calcDistance + 1);\n        }\n      });\n\n      if (activePositions.every(position => position.weight === 0)) return null;\n\n      return activePositions;\n    }\n\n    console.log(placementGeometry.vertices.length * 3);\n    console.log(positions.length);\n\n    return [positions, locationIndices, locationWeights];\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585323569723
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"filename\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/zlibTest.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/covid19_visualiser_data\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/zlibTest.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/zlibTest.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/zlibTest.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
        "sourceFileName": "zlibTest.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _pako = _interopRequireDefault(require(\"pako\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar testObj = {\n  something: \"yes\",\n  otherThing: \"no\",\n  finalThing: new Uint8Array([3, 6, 23, 76, 269]),\n  arraything: [1, 3, \"this\", 379]\n};\n\nvar compressed = _pako[\"default\"].deflate(JSON.stringify(testObj), {\n  to: \"string\"\n});\n\nconsole.log(compressed);\nvar recovered = JSON.parse(_pako[\"default\"].inflate(compressed, {\n  to: \"string\"\n}));\nconsole.log(recovered);\n\n_fs[\"default\"].writeFile(\"testfile.bin\", compressed, function (err) {\n  if (err) throw err;\n  console.log(\"testfile.bin saved!\");\n});\n\nvar compressedFromFile = _fs[\"default\"].readFile(\"testfile.bin\", function (err, data) {\n  console.log(data);\n  console.log(JSON.parse(_pako[\"default\"].inflate(data.toString(), {\n    to: \"string\"\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInpsaWJUZXN0LmpzIl0sIm5hbWVzIjpbInRlc3RPYmoiLCJzb21ldGhpbmciLCJvdGhlclRoaW5nIiwiZmluYWxUaGluZyIsIlVpbnQ4QXJyYXkiLCJhcnJheXRoaW5nIiwiY29tcHJlc3NlZCIsInBha28iLCJkZWZsYXRlIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvIiwiY29uc29sZSIsImxvZyIsInJlY292ZXJlZCIsInBhcnNlIiwiaW5mbGF0ZSIsImZzIiwid3JpdGVGaWxlIiwiZXJyIiwiY29tcHJlc3NlZEZyb21GaWxlIiwicmVhZEZpbGUiLCJkYXRhIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUc7QUFDZEMsRUFBQUEsU0FBUyxFQUFFLEtBREc7QUFFZEMsRUFBQUEsVUFBVSxFQUFFLElBRkU7QUFHZEMsRUFBQUEsVUFBVSxFQUFFLElBQUlDLFVBQUosQ0FBZSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sRUFBUCxFQUFXLEVBQVgsRUFBZSxHQUFmLENBQWYsQ0FIRTtBQUlkQyxFQUFBQSxVQUFVLEVBQUUsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLE1BQVAsRUFBZSxHQUFmO0FBSkUsQ0FBaEI7O0FBTUEsSUFBTUMsVUFBVSxHQUFHQyxpQkFBS0MsT0FBTCxDQUFhQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVYsT0FBZixDQUFiLEVBQXNDO0FBQUVXLEVBQUFBLEVBQUUsRUFBRTtBQUFOLENBQXRDLENBQW5COztBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWVAsVUFBWjtBQUVBLElBQU1RLFNBQVMsR0FBR0wsSUFBSSxDQUFDTSxLQUFMLENBQVdSLGlCQUFLUyxPQUFMLENBQWFWLFVBQWIsRUFBeUI7QUFBRUssRUFBQUEsRUFBRSxFQUFFO0FBQU4sQ0FBekIsQ0FBWCxDQUFsQjtBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBWjs7QUFFQUcsZUFBR0MsU0FBSCxDQUFhLGNBQWIsRUFBNkJaLFVBQTdCLEVBQXlDLFVBQUFhLEdBQUcsRUFBSTtBQUM5QyxNQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUUCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQUNELENBSEQ7O0FBS0EsSUFBTU8sa0JBQWtCLEdBQUdILGVBQUdJLFFBQUgsQ0FBWSxjQUFaLEVBQTRCLFVBQUNGLEdBQUQsRUFBTUcsSUFBTixFQUFlO0FBQ3BFVixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVMsSUFBWjtBQUNBVixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosSUFBSSxDQUFDTSxLQUFMLENBQVdSLGlCQUFLUyxPQUFMLENBQWFNLElBQUksQ0FBQ0MsUUFBTCxFQUFiLEVBQThCO0FBQUVaLElBQUFBLEVBQUUsRUFBRTtBQUFOLEdBQTlCLENBQVgsQ0FBWjtBQUNELENBSDBCLENBQTNCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYXRyaWNrbmFzcmFsbGEvV2Vic3Rvcm1Qcm9qZWN0cy9jb3ZpZDE5X3Zpc3VhbGlzZXJfZGF0YS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgcGFrbyBmcm9tIFwicGFrb1wiO1xuXG5jb25zdCB0ZXN0T2JqID0ge1xuICBzb21ldGhpbmc6IFwieWVzXCIsXG4gIG90aGVyVGhpbmc6IFwibm9cIixcbiAgZmluYWxUaGluZzogbmV3IFVpbnQ4QXJyYXkoWzMsIDYsIDIzLCA3NiwgMjY5XSksXG4gIGFycmF5dGhpbmc6IFsxLCAzLCBcInRoaXNcIiwgMzc5XVxufTtcbmNvbnN0IGNvbXByZXNzZWQgPSBwYWtvLmRlZmxhdGUoSlNPTi5zdHJpbmdpZnkodGVzdE9iaiksIHsgdG86IFwic3RyaW5nXCIgfSk7XG5jb25zb2xlLmxvZyhjb21wcmVzc2VkKTtcblxuY29uc3QgcmVjb3ZlcmVkID0gSlNPTi5wYXJzZShwYWtvLmluZmxhdGUoY29tcHJlc3NlZCwgeyB0bzogXCJzdHJpbmdcIiB9KSk7XG5jb25zb2xlLmxvZyhyZWNvdmVyZWQpO1xuXG5mcy53cml0ZUZpbGUoXCJ0ZXN0ZmlsZS5iaW5cIiwgY29tcHJlc3NlZCwgZXJyID0+IHtcbiAgaWYgKGVycikgdGhyb3cgZXJyO1xuICBjb25zb2xlLmxvZyhcInRlc3RmaWxlLmJpbiBzYXZlZCFcIik7XG59KTtcblxuY29uc3QgY29tcHJlc3NlZEZyb21GaWxlID0gZnMucmVhZEZpbGUoXCJ0ZXN0ZmlsZS5iaW5cIiwgKGVyciwgZGF0YSkgPT4ge1xuICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgY29uc29sZS5sb2coSlNPTi5wYXJzZShwYWtvLmluZmxhdGUoZGF0YS50b1N0cmluZygpLCB7IHRvOiBcInN0cmluZ1wiIH0pKSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "zlibTest.js"
      ],
      "names": [
        "testObj",
        "something",
        "otherThing",
        "finalThing",
        "Uint8Array",
        "arraything",
        "compressed",
        "pako",
        "deflate",
        "JSON",
        "stringify",
        "to",
        "console",
        "log",
        "recovered",
        "parse",
        "inflate",
        "fs",
        "writeFile",
        "err",
        "compressedFromFile",
        "readFile",
        "data",
        "toString"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,KADG;AAEdC,EAAAA,UAAU,EAAE,IAFE;AAGdC,EAAAA,UAAU,EAAE,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,GAAf,CAAf,CAHE;AAIdC,EAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,EAAe,GAAf;AAJE,CAAhB;;AAMA,IAAMC,UAAU,GAAGC,iBAAKC,OAAL,CAAaC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAb,EAAsC;AAAEW,EAAAA,EAAE,EAAE;AAAN,CAAtC,CAAnB;;AACAC,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEA,IAAMQ,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAWR,iBAAKS,OAAL,CAAaV,UAAb,EAAyB;AAAEK,EAAAA,EAAE,EAAE;AAAN,CAAzB,CAAX,CAAlB;AACAC,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AAEAG,eAAGC,SAAH,CAAa,cAAb,EAA6BZ,UAA7B,EAAyC,UAAAa,GAAG,EAAI;AAC9C,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTP,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAHD;;AAKA,IAAMO,kBAAkB,GAAGH,eAAGI,QAAH,CAAY,cAAZ,EAA4B,UAACF,GAAD,EAAMG,IAAN,EAAe;AACpEV,EAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACM,KAAL,CAAWR,iBAAKS,OAAL,CAAaM,IAAI,CAACC,QAAL,EAAb,EAA8B;AAAEZ,IAAAA,EAAE,EAAE;AAAN,GAA9B,CAAX,CAAZ;AACD,CAH0B,CAA3B",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/covid19_visualiser_data/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport pako from \"pako\";\n\nconst testObj = {\n  something: \"yes\",\n  otherThing: \"no\",\n  finalThing: new Uint8Array([3, 6, 23, 76, 269]),\n  arraything: [1, 3, \"this\", 379]\n};\nconst compressed = pako.deflate(JSON.stringify(testObj), { to: \"string\" });\nconsole.log(compressed);\n\nconst recovered = JSON.parse(pako.inflate(compressed, { to: \"string\" }));\nconsole.log(recovered);\n\nfs.writeFile(\"testfile.bin\", compressed, err => {\n  if (err) throw err;\n  console.log(\"testfile.bin saved!\");\n});\n\nconst compressedFromFile = fs.readFile(\"testfile.bin\", (err, data) => {\n  console.log(data);\n  console.log(JSON.parse(pako.inflate(data.toString(), { to: \"string\" })));\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585242158548
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/zlibTest.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/zlibTest.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/zlibTest.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/zlibTest.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
        "sourceFileName": "zlibTest.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _pako = _interopRequireDefault(require(\"pako\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar testArr = new ArrayBuffer([1.234, -2.345, 3.456, -4.567, 5.678, -6.789]);\nconsole.log(testArr);\n\nvar compressed = _pako[\"default\"].deflate(testArr);\n\nconsole.log(compressed);\n\nvar recovered = _pako[\"default\"].inflate(compressed);\n\nconsole.log(recovered);\n\n_fs[\"default\"].writeFile(\"testfile.bin\", compressed, function (err) {\n  if (err) throw err;\n  console.log(\"testfile.bin saved!\");\n});\n\nvar compressedFromFile = _fs[\"default\"].readFile(\"testfile.bin\", function (err, data) {\n  console.log(data);\n  console.log(_pako[\"default\"].inflate(data));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInpsaWJUZXN0LmpzIl0sIm5hbWVzIjpbInRlc3RBcnIiLCJBcnJheUJ1ZmZlciIsImNvbnNvbGUiLCJsb2ciLCJjb21wcmVzc2VkIiwicGFrbyIsImRlZmxhdGUiLCJyZWNvdmVyZWQiLCJpbmZsYXRlIiwiZnMiLCJ3cml0ZUZpbGUiLCJlcnIiLCJjb21wcmVzc2VkRnJvbUZpbGUiLCJyZWFkRmlsZSIsImRhdGEiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsSUFBSUMsV0FBSixDQUFnQixDQUFDLEtBQUQsRUFBUSxDQUFDLEtBQVQsRUFBZ0IsS0FBaEIsRUFBdUIsQ0FBQyxLQUF4QixFQUErQixLQUEvQixFQUFzQyxDQUFDLEtBQXZDLENBQWhCLENBQWhCO0FBRUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxPQUFaOztBQUNBLElBQU1JLFVBQVUsR0FBR0MsaUJBQUtDLE9BQUwsQ0FBYU4sT0FBYixDQUFuQjs7QUFDQUUsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQVo7O0FBRUEsSUFBTUcsU0FBUyxHQUFHRixpQkFBS0csT0FBTCxDQUFhSixVQUFiLENBQWxCOztBQUNBRixPQUFPLENBQUNDLEdBQVIsQ0FBWUksU0FBWjs7QUFFQUUsZUFBR0MsU0FBSCxDQUFhLGNBQWIsRUFBNkJOLFVBQTdCLEVBQXlDLFVBQUFPLEdBQUcsRUFBSTtBQUM5QyxNQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUVCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQUNELENBSEQ7O0FBS0EsSUFBTVMsa0JBQWtCLEdBQUdILGVBQUdJLFFBQUgsQ0FBWSxjQUFaLEVBQTRCLFVBQUNGLEdBQUQsRUFBTUcsSUFBTixFQUFlO0FBQ3BFWixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVcsSUFBWjtBQUNBWixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsaUJBQUtHLE9BQUwsQ0FBYU0sSUFBYixDQUFaO0FBQ0QsQ0FIMEIsQ0FBM0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BhdHJpY2tuYXNyYWxsYS9XZWJzdG9ybVByb2plY3RzL2Nvcm9uYXZpcnVzX3Zpc3VhbGlzYXRpb24vZGF0YXRvb2wvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xuaW1wb3J0IHBha28gZnJvbSBcInBha29cIjtcblxuY29uc3QgdGVzdEFyciA9IG5ldyBBcnJheUJ1ZmZlcihbMS4yMzQsIC0yLjM0NSwgMy40NTYsIC00LjU2NywgNS42NzgsIC02Ljc4OV0pO1xuXG5jb25zb2xlLmxvZyh0ZXN0QXJyKTtcbmNvbnN0IGNvbXByZXNzZWQgPSBwYWtvLmRlZmxhdGUodGVzdEFycik7XG5jb25zb2xlLmxvZyhjb21wcmVzc2VkKTtcblxuY29uc3QgcmVjb3ZlcmVkID0gcGFrby5pbmZsYXRlKGNvbXByZXNzZWQpO1xuY29uc29sZS5sb2cocmVjb3ZlcmVkKTtcblxuZnMud3JpdGVGaWxlKFwidGVzdGZpbGUuYmluXCIsIGNvbXByZXNzZWQsIGVyciA9PiB7XG4gIGlmIChlcnIpIHRocm93IGVycjtcbiAgY29uc29sZS5sb2coXCJ0ZXN0ZmlsZS5iaW4gc2F2ZWQhXCIpO1xufSk7XG5cbmNvbnN0IGNvbXByZXNzZWRGcm9tRmlsZSA9IGZzLnJlYWRGaWxlKFwidGVzdGZpbGUuYmluXCIsIChlcnIsIGRhdGEpID0+IHtcbiAgY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnNvbGUubG9nKHBha28uaW5mbGF0ZShkYXRhKSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "zlibTest.js"
      ],
      "names": [
        "testArr",
        "ArrayBuffer",
        "console",
        "log",
        "compressed",
        "pako",
        "deflate",
        "recovered",
        "inflate",
        "fs",
        "writeFile",
        "err",
        "compressedFromFile",
        "readFile",
        "data"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAG,IAAIC,WAAJ,CAAgB,CAAC,KAAD,EAAQ,CAAC,KAAT,EAAgB,KAAhB,EAAuB,CAAC,KAAxB,EAA+B,KAA/B,EAAsC,CAAC,KAAvC,CAAhB,CAAhB;AAEAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,IAAMI,UAAU,GAAGC,iBAAKC,OAAL,CAAaN,OAAb,CAAnB;;AACAE,OAAO,CAACC,GAAR,CAAYC,UAAZ;;AAEA,IAAMG,SAAS,GAAGF,iBAAKG,OAAL,CAAaJ,UAAb,CAAlB;;AACAF,OAAO,CAACC,GAAR,CAAYI,SAAZ;;AAEAE,eAAGC,SAAH,CAAa,cAAb,EAA6BN,UAA7B,EAAyC,UAAAO,GAAG,EAAI;AAC9C,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTT,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAHD;;AAKA,IAAMS,kBAAkB,GAAGH,eAAGI,QAAH,CAAY,cAAZ,EAA4B,UAACF,GAAD,EAAMG,IAAN,EAAe;AACpEZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYE,iBAAKG,OAAL,CAAaM,IAAb,CAAZ;AACD,CAH0B,CAA3B",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport pako from \"pako\";\n\nconst testArr = new ArrayBuffer([1.234, -2.345, 3.456, -4.567, 5.678, -6.789]);\n\nconsole.log(testArr);\nconst compressed = pako.deflate(testArr);\nconsole.log(compressed);\n\nconst recovered = pako.inflate(compressed);\nconsole.log(recovered);\n\nfs.writeFile(\"testfile.bin\", compressed, err => {\n  if (err) throw err;\n  console.log(\"testfile.bin saved!\");\n});\n\nconst compressedFromFile = fs.readFile(\"testfile.bin\", (err, data) => {\n  console.log(data);\n  console.log(pako.inflate(data));\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585333538439
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/ParseCaseData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/ParseCaseData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/ParseCaseData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/ParseCaseData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
        "sourceFileName": "ParseCaseData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _pako = require(\"pako\");\n\nvar _CSVUtils = require(\"./src/CSVUtils\");\n\nvar _DataUtils = require(\"./src/DataUtils\");\n\nvar _Utils = require(\"./src/Utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction exportDataForApplication() {\n  return _exportDataForApplication.apply(this, arguments);\n}\n\nfunction _exportDataForApplication() {\n  _exportDataForApplication = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var confirmedGlobalRaw, confirmedUSRaw, confirmedRaw, deathsGlobalRaw, deathsUSRaw, deathsRaw, locationPositions, _DataUtils$getVertexD, _DataUtils$getVertexD2, positions, locationIndices, locationWeights, _DataUtils$parseDataT, _DataUtils$parseDataT2, confirmedTextureData, totalDays, totalLocations, _DataUtils$parseDataT3, _DataUtils$parseDataT4, deathsTextureData, staticData, staticOutput, compressedPositions, compressedIndices, compressedWeights, confirmedTextureDataCompressed, deathsTextureDataCompressed;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _CSVUtils.parseCSV)(\"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\");\n\n          case 2:\n            confirmedGlobalRaw = _context.sent;\n            _context.t0 = _CSVUtils.aggregateUSDataToState;\n            _context.next = 6;\n            return (0, _CSVUtils.parseCSV)(\"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\");\n\n          case 6:\n            _context.t1 = _context.sent;\n            confirmedUSRaw = (0, _context.t0)(_context.t1);\n            confirmedRaw = confirmedGlobalRaw.concat(confirmedUSRaw);\n            _context.next = 11;\n            return (0, _CSVUtils.parseCSV)(\"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\");\n\n          case 11:\n            deathsGlobalRaw = _context.sent;\n            _context.t2 = _CSVUtils.aggregateUSDataToState;\n            _context.next = 15;\n            return (0, _CSVUtils.parseCSV)(\"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv\");\n\n          case 15:\n            _context.t3 = _context.sent;\n            deathsUSRaw = (0, _context.t2)(_context.t3);\n            deathsRaw = deathsGlobalRaw.concat(deathsUSRaw); // TODO: Add recovered data when available.\n            // const recoveredGlobalRaw = await parseCSV(\n            //   \"./rawData/time_series_covid19_recovered_global.csv\"\n            // );\n            //\n            // const recoveredPlaceholder = await parseCSV(\n            //   \"./rawData/time_series_covid19_confirmed_US.csv\"\n            // );\n            // createPlaceholderData(recoveredPlaceholder);\n            // const recoveredRaw = recoveredGlobalRaw.concat(recoveredPlaceholder);\n            // remove US case/death values as State/County level data available (but keep the entry for data without)\n\n            (0, _CSVUtils.removeUSCountryValues)(confirmedRaw);\n            (0, _CSVUtils.removeUSCountryValues)(deathsRaw);\n            console.log(\"Performing vector and weight calculations. This can take up to 3 mins with large data sets, please be patient!\");\n            locationPositions = _DataUtils.DataUtils.getPositionVectorsFromData(confirmedRaw);\n            _DataUtils$getVertexD = _DataUtils.DataUtils.getVertexData(locationPositions), _DataUtils$getVertexD2 = _slicedToArray(_DataUtils$getVertexD, 3), positions = _DataUtils$getVertexD2[0], locationIndices = _DataUtils$getVertexD2[1], locationWeights = _DataUtils$getVertexD2[2];\n            _DataUtils$parseDataT = _DataUtils.DataUtils.parseDataToTextureData(confirmedRaw), _DataUtils$parseDataT2 = _slicedToArray(_DataUtils$parseDataT, 3), confirmedTextureData = _DataUtils$parseDataT2[0], totalDays = _DataUtils$parseDataT2[1], totalLocations = _DataUtils$parseDataT2[2];\n            _DataUtils$parseDataT3 = _DataUtils.DataUtils.parseDataToTextureData(deathsRaw), _DataUtils$parseDataT4 = _slicedToArray(_DataUtils$parseDataT3, 2), deathsTextureData = _DataUtils$parseDataT4[0]; // const [recoveredTextureData, ,] = DataUtils.parseDataToTextureData(recoveredRaw)\n\n            staticData = {\n              totalDays: totalDays,\n              totalLocations: totalLocations\n            };\n            staticOutput = JSON.stringify(staticData);\n            compressedPositions = (0, _Utils.compressForFile)(positions); // Uint16\n\n            compressedIndices = (0, _Utils.compressForFile)(locationIndices); // Uint32\n\n            compressedWeights = (0, _Utils.compressForFile)(locationWeights); // Float32\n            // output compressed static data to file\n\n            _fs[\"default\"].writeFile(\"../visualisation/src/staticData.json\", staticOutput, function (err) {\n              if (err) throw err;\n              console.log(\"Static data successfully saved!\");\n            });\n\n            _fs[\"default\"].writeFile(\"../visualisation/public/data/positionData.bin\", compressedPositions, function (err) {\n              if (err) throw err;\n              console.log(\"Static position data successfully saved!\");\n            });\n\n            _fs[\"default\"].writeFile(\"../visualisation/public/data/locationIndexData.bin\", compressedIndices, function (err) {\n              if (err) throw err;\n              console.log(\"Static index data successfully saved!\");\n            });\n\n            _fs[\"default\"].writeFile(\"../visualisation/public/data/locationWeightData.bin\", compressedWeights, function (err) {\n              if (err) throw err;\n              console.log(\"Static weights data successfully saved!\");\n            }); // output texture data\n\n\n            confirmedTextureDataCompressed = (0, _pako.deflate)(confirmedTextureData);\n\n            _fs[\"default\"].writeFile(\"../visualisation/public/data/confirmedTextureData.bin\", confirmedTextureDataCompressed, function (err) {\n              if (err) throw err;\n              console.log(\"Confirmed cases texture data successfully saved!\");\n            });\n\n            deathsTextureDataCompressed = (0, _pako.deflate)(deathsTextureData);\n\n            _fs[\"default\"].writeFile(\"../visualisation/public/data/deathsTextureData.bin\", deathsTextureDataCompressed, function (err) {\n              if (err) throw err;\n              console.log(\"Deaths texture data successfully saved!\");\n            }); // Todo: Add recovered data when available\n            // fs.writeFile(\n            //   \"../visualisation/public/data/recoveredTextureData.bin\",\n            //   recoveredTextureData,\n            //   err => {\n            //     if (err) throw err;\n            //     console.log(\"Recovered cases texture data successfully parsed!\");\n            //   }\n            // );\n\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _exportDataForApplication.apply(this, arguments);\n}\n\nexportDataForApplication();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ParseCaseData.js"
      ],
      "names": [
        "exportDataForApplication",
        "confirmedGlobalRaw",
        "aggregateUSDataToState",
        "confirmedUSRaw",
        "confirmedRaw",
        "concat",
        "deathsGlobalRaw",
        "deathsUSRaw",
        "deathsRaw",
        "console",
        "log",
        "locationPositions",
        "DataUtils",
        "getPositionVectorsFromData",
        "getVertexData",
        "positions",
        "locationIndices",
        "locationWeights",
        "parseDataToTextureData",
        "confirmedTextureData",
        "totalDays",
        "totalLocations",
        "deathsTextureData",
        "staticData",
        "staticOutput",
        "JSON",
        "stringify",
        "compressedPositions",
        "compressedIndices",
        "compressedWeights",
        "fs",
        "writeFile",
        "err",
        "confirmedTextureDataCompressed",
        "deathsTextureDataCompressed"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport { deflate } from \"pako\";\nimport {\n  parseCSV,\n  removeUSCountryValues,\n  aggregateUSDataToState\n} from \"./src/CSVUtils\";\nimport { DataUtils } from \"./src/DataUtils\";\nimport { compressForFile } from \"./src/Utils\";\n\nasync function exportDataForApplication() {\n  // read csv files and concat Global and US data (always do it in that order so that indices are correct for non-us sets)\n  const confirmedGlobalRaw = await parseCSV(\n    \"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n  );\n  const confirmedUSRaw = aggregateUSDataToState(\n    await parseCSV(\n      \"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\"\n    )\n  );\n  const confirmedRaw = confirmedGlobalRaw.concat(confirmedUSRaw);\n  const deathsGlobalRaw = await parseCSV(\n    \"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\"\n  );\n  const deathsUSRaw = aggregateUSDataToState(\n    await parseCSV(\n      \"/Users/patricknasralla/WebstormProjects/COVID-19_data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv\"\n    )\n  );\n  const deathsRaw = deathsGlobalRaw.concat(deathsUSRaw);\n\n  // TODO: Add recovered data when available.\n  // const recoveredGlobalRaw = await parseCSV(\n  //   \"./rawData/time_series_covid19_recovered_global.csv\"\n  // );\n  //\n  // const recoveredPlaceholder = await parseCSV(\n  //   \"./rawData/time_series_covid19_confirmed_US.csv\"\n  // );\n  // createPlaceholderData(recoveredPlaceholder);\n  // const recoveredRaw = recoveredGlobalRaw.concat(recoveredPlaceholder);\n\n  // remove US case/death values as State/County level data available (but keep the entry for data without)\n  removeUSCountryValues(confirmedRaw);\n  removeUSCountryValues(deathsRaw);\n\n  console.log(\n    \"Performing vector and weight calculations. This can take up to 3 mins with large data sets, please be patient!\"\n  );\n\n  const locationPositions = DataUtils.getPositionVectorsFromData(confirmedRaw);\n  const [positions, locationIndices, locationWeights] = DataUtils.getVertexData(\n    locationPositions\n  );\n\n  const [\n    confirmedTextureData,\n    totalDays,\n    totalLocations\n  ] = DataUtils.parseDataToTextureData(confirmedRaw);\n  const [deathsTextureData, ,] = DataUtils.parseDataToTextureData(deathsRaw);\n  // const [recoveredTextureData, ,] = DataUtils.parseDataToTextureData(recoveredRaw)\n\n  const staticData = {\n    totalDays,\n    totalLocations\n  };\n  const staticOutput = JSON.stringify(staticData);\n\n  const compressedPositions = compressForFile(positions); // Uint16\n  const compressedIndices = compressForFile(locationIndices); // Uint32\n  const compressedWeights = compressForFile(locationWeights); // Float32\n\n  // output compressed static data to file\n  fs.writeFile(\"../visualisation/src/staticData.json\", staticOutput, err => {\n    if (err) throw err;\n    console.log(\"Static data successfully saved!\");\n  });\n\n  fs.writeFile(\n    \"../visualisation/public/data/positionData.bin\",\n    compressedPositions,\n    err => {\n      if (err) throw err;\n      console.log(\"Static position data successfully saved!\");\n    }\n  );\n\n  fs.writeFile(\n    \"../visualisation/public/data/locationIndexData.bin\",\n    compressedIndices,\n    err => {\n      if (err) throw err;\n      console.log(\"Static index data successfully saved!\");\n    }\n  );\n\n  fs.writeFile(\n    \"../visualisation/public/data/locationWeightData.bin\",\n    compressedWeights,\n    err => {\n      if (err) throw err;\n      console.log(\"Static weights data successfully saved!\");\n    }\n  );\n\n  // output texture data\n  const confirmedTextureDataCompressed = deflate(confirmedTextureData);\n  fs.writeFile(\n    \"../visualisation/public/data/confirmedTextureData.bin\",\n    confirmedTextureDataCompressed,\n    err => {\n      if (err) throw err;\n      console.log(\"Confirmed cases texture data successfully saved!\");\n    }\n  );\n  const deathsTextureDataCompressed = deflate(deathsTextureData);\n  fs.writeFile(\n    \"../visualisation/public/data/deathsTextureData.bin\",\n    deathsTextureDataCompressed,\n    err => {\n      if (err) throw err;\n      console.log(\"Deaths texture data successfully saved!\");\n    }\n  );\n  // Todo: Add recovered data when available\n  // fs.writeFile(\n  //   \"../visualisation/public/data/recoveredTextureData.bin\",\n  //   recoveredTextureData,\n  //   err => {\n  //     if (err) throw err;\n  //     console.log(\"Recovered cases texture data successfully parsed!\");\n  //   }\n  // );\n}\n\nexportDataForApplication();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585832938894
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/DataUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/DataUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/DataUtils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/DataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
        "sourceFileName": "DataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataUtils = void 0;\n\nvar _three = require(\"three\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataUtils = /*#__PURE__*/function () {\n  function DataUtils() {\n    _classCallCheck(this, DataUtils);\n  }\n\n  _createClass(DataUtils, null, [{\n    key: \"getPositionVectorsFromData\",\n    value: function getPositionVectorsFromData(csvData) {\n      var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var coordinateList = [];\n      csvData.forEach(function (row) {\n        var lat = Number(row.Lat);\n\n        var _long = Number(row.Long);\n\n        var phi = (90 - lat) * (Math.PI / 180);\n        var theta = (_long + 180) * (Math.PI / 180);\n        var x = -(radius * Math.sin(phi) * Math.cos(theta));\n        var z = radius * Math.sin(phi) * Math.sin(theta);\n        var y = radius * Math.cos(phi);\n        coordinateList.push(new _three.Vector3(x, y, z));\n      });\n      return coordinateList;\n    }\n  }, {\n    key: \"parseDataToTextureData\",\n    value: function parseDataToTextureData(data) {\n      // get column names for rawData\n      var keys = Object.keys(data[0]).slice(4); // get total days of rawData and total locations\n\n      var totalDays = keys.length + 1;\n      var totalLocations = data.length; // instantiate TypedArray\n\n      var textureData = new Uint8Array(totalDays * totalLocations * 4); // fill the first entry of the texture with 0s so that you always start with a clean world\n\n      for (var i = 0; i < totalLocations * 4; i++) {\n        textureData[i] = 0;\n      } // create ArrayBuffer and DataView for bitwise operations.\n\n\n      var buffer = new ArrayBuffer(4);\n      var view = new DataView(buffer); // save the previous key's name just in case there are missing records\n\n      var prevKey = null; // populate textureData\n\n      keys.forEach(function (key, i) {\n        data.forEach(function (location, j) {\n          var caseNumber;\n\n          if (location[key] === undefined && prevKey) {\n            caseNumber = Number(location[prevKey]);\n          } else {\n            caseNumber = Number(location[key]);\n          }\n\n          var logFloatValue;\n          var highPIntValue;\n\n          if (caseNumber !== 0) {\n            logFloatValue = Math.log10(caseNumber + 1);\n            highPIntValue = Math.floor(logFloatValue * 100000000);\n          }\n\n          view.setUint32(0, highPIntValue);\n          var stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n          textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n          textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n          textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n          textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n        });\n        prevKey = key;\n      });\n      return [textureData, totalDays, totalLocations];\n    }\n  }, {\n    key: \"getVertexData\",\n    value: function getVertexData(locations) {\n      var placementGeometry = new _three.IcosahedronGeometry(1, 7);\n      var positions = [];\n      var locationIndices = [];\n      var locationWeights = [];\n\n      for (var i = 0; i < placementGeometry.vertices.length; i++) {\n        var positionWeights = calculateBoneWeights(placementGeometry.vertices[i], locations);\n\n        if (!!positionWeights) {\n          positions.push(i);\n          positionWeights.forEach(function (position) {\n            locationIndices.push(position.index);\n            locationWeights.push(position.weight);\n          });\n        }\n      }\n\n      function calculateBoneWeights(vertex, countryVectors) {\n        // find closest 4 positions\n        var distanceList = [];\n        countryVectors.forEach(function (position, index) {\n          // consider using distanceToSquared...\n          var distance = vertex.distanceTo(position);\n          distanceList.push({\n            index: index,\n            distance: distance\n          });\n        });\n        distanceList.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        var activePositions = distanceList.slice(0, 4); // calculate weights (note, you're gonna want to play with the cutoff...\n\n        activePositions.forEach(function (position) {\n          // set a cutoff for far away values (to stop values passing through sphere)\n          if (position.distance > 0.4) position.weight = 0.0;else {\n            // normalise remaining distances to value between 0 and 50\n            var calcDistance = position.distance / 0.4 * 50; // weight = normalised inverse square of normalised distance\n\n            position.weight = 1 / (calcDistance * calcDistance + 1);\n          }\n        });\n        if (activePositions.every(function (position) {\n          return position.weight === 0;\n        })) return null;\n        return activePositions;\n      }\n\n      console.log(\"Total vertices: \".concat(placementGeometry.vertices.length));\n      console.log(\"Total vertices after culling: \".concat(positions.length));\n      console.log(\"Total weights calculated: \".concat(locationWeights.length));\n      return [new Uint32Array(positions), new Uint16Array(locationIndices), new Float32Array(locationWeights)];\n    }\n  }]);\n\n  return DataUtils;\n}();\n\nexports.DataUtils = DataUtils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "DataUtils.js"
      ],
      "names": [
        "DataUtils",
        "csvData",
        "radius",
        "coordinateList",
        "forEach",
        "row",
        "lat",
        "Number",
        "Lat",
        "long",
        "Long",
        "phi",
        "Math",
        "PI",
        "theta",
        "x",
        "sin",
        "cos",
        "z",
        "y",
        "push",
        "Vector3",
        "data",
        "keys",
        "Object",
        "slice",
        "totalDays",
        "length",
        "totalLocations",
        "textureData",
        "Uint8Array",
        "i",
        "buffer",
        "ArrayBuffer",
        "view",
        "DataView",
        "prevKey",
        "key",
        "location",
        "j",
        "caseNumber",
        "undefined",
        "logFloatValue",
        "highPIntValue",
        "log10",
        "floor",
        "setUint32",
        "stride",
        "getUint8",
        "locations",
        "placementGeometry",
        "IcosahedronGeometry",
        "positions",
        "locationIndices",
        "locationWeights",
        "vertices",
        "positionWeights",
        "calculateBoneWeights",
        "position",
        "index",
        "weight",
        "vertex",
        "countryVectors",
        "distanceList",
        "distance",
        "distanceTo",
        "sort",
        "a",
        "b",
        "activePositions",
        "calcDistance",
        "every",
        "console",
        "log",
        "Uint32Array",
        "Uint16Array",
        "Float32Array"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "sourcesContent": [
        "import { Vector3, IcosahedronGeometry } from \"three\";\n\nexport class DataUtils {\n  static getPositionVectorsFromData(csvData, radius = 1) {\n    const coordinateList = [];\n\n    csvData.forEach(row => {\n      const lat = Number(row.Lat);\n      const long = Number(row.Long);\n      const phi = (90 - lat) * (Math.PI / 180);\n      const theta = (long + 180) * (Math.PI / 180);\n      const x = -(radius * Math.sin(phi) * Math.cos(theta));\n      const z = radius * Math.sin(phi) * Math.sin(theta);\n      const y = radius * Math.cos(phi);\n      coordinateList.push(new Vector3(x, y, z));\n    });\n\n    return coordinateList;\n  }\n\n  static parseDataToTextureData(data) {\n    // get column names for rawData\n    const keys = Object.keys(data[0]).slice(4);\n\n    // get total days of rawData and total locations\n    const totalDays = keys.length + 1;\n    const totalLocations = data.length;\n\n    // instantiate TypedArray\n    const textureData = new Uint8Array(totalDays * totalLocations * 4);\n\n    // fill the first entry of the texture with 0s so that you always start with a clean world\n    for (let i = 0; i < totalLocations * 4; i++) {\n      textureData[i] = 0;\n    }\n\n    // create ArrayBuffer and DataView for bitwise operations.\n    const buffer = new ArrayBuffer(4);\n    const view = new DataView(buffer);\n\n    // save the previous key's name just in case there are missing records\n    let prevKey = null;\n\n    // populate textureData\n    keys.forEach((key, i) => {\n      data.forEach((location, j) => {\n        let caseNumber;\n        if (location[key] === undefined && prevKey) {\n          caseNumber = Number(location[prevKey]);\n        } else {\n          caseNumber = Number(location[key]);\n        }\n        let logFloatValue;\n        let highPIntValue;\n        if (caseNumber !== 0) {\n          logFloatValue = Math.log10(caseNumber + 1);\n          highPIntValue = Math.floor(logFloatValue * 100000000);\n        }\n        view.setUint32(0, highPIntValue);\n\n        const stride = totalLocations * 4 + i * data.length * 4 + j * 4;\n        textureData[stride] = highPIntValue === 0 ? 0 : view.getUint8(0);\n        textureData[stride + 1] = highPIntValue === 0 ? 0 : view.getUint8(1);\n        textureData[stride + 3] = highPIntValue === 0 ? 0 : view.getUint8(2);\n        textureData[stride + 4] = highPIntValue === 0 ? 0 : view.getUint8(3);\n      });\n      prevKey = key;\n    });\n\n    return [textureData, totalDays, totalLocations];\n  }\n\n  static getVertexData(locations) {\n    const placementGeometry = new IcosahedronGeometry(1, 7);\n    const positions = [];\n    const locationIndices = [];\n    const locationWeights = [];\n\n    for (let i = 0; i < placementGeometry.vertices.length; i++) {\n      const positionWeights = calculateBoneWeights(\n        placementGeometry.vertices[i],\n        locations\n      );\n\n      if (!!positionWeights) {\n        positions.push(i);\n        positionWeights.forEach(position => {\n          locationIndices.push(position.index);\n          locationWeights.push(position.weight);\n        });\n      }\n    }\n\n    function calculateBoneWeights(vertex, countryVectors) {\n      // find closest 4 positions\n      const distanceList = [];\n      countryVectors.forEach((position, index) => {\n        // consider using distanceToSquared...\n        const distance = vertex.distanceTo(position);\n        distanceList.push({\n          index,\n          distance\n        });\n      });\n      distanceList.sort((a, b) => a.distance - b.distance);\n\n      const activePositions = distanceList.slice(0, 4);\n\n      // calculate weights (note, you're gonna want to play with the cutoff...\n      activePositions.forEach(position => {\n        // set a cutoff for far away values (to stop values passing through sphere)\n        if (position.distance > 0.4) position.weight = 0.0;\n        else {\n          // normalise remaining distances to value between 0 and 50\n          const calcDistance = (position.distance / 0.4) * 50;\n          // weight = normalised inverse square of normalised distance\n          position.weight = 1 / (calcDistance * calcDistance + 1);\n        }\n      });\n\n      if (activePositions.every(position => position.weight === 0)) return null;\n\n      return activePositions;\n    }\n\n    console.log(`Total vertices: ${placementGeometry.vertices.length}`);\n    console.log(`Total vertices after culling: ${positions.length}`);\n    console.log(`Total weights calculated: ${locationWeights.length}`);\n\n    return [\n      new Uint32Array(positions),\n      new Uint16Array(locationIndices),\n      new Float32Array(locationWeights)\n    ];\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587123357419
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/experiments.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/experiments.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/experiments.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/experiments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
        "sourceFileName": "experiments.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _pako = require(\"pako\");\n\nvar _CSVUtils = require(\"./src/CSVUtils\");\n\nvar _DataUtils = require(\"./src/DataUtils\");\n\nvar _Utils = require(\"./src/Utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction exportDataForApplication() {\n  return _exportDataForApplication.apply(this, arguments);\n}\n\nfunction _exportDataForApplication() {\n  _exportDataForApplication = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var confirmedUSRaw;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _CSVUtils.parseCSV)(\"./rawData/time_series_covid19_confirmed_US.csv\");\n\n          case 2:\n            confirmedUSRaw = _context.sent;\n            console.log((0, _CSVUtils.aggregateUSDataToState)(confirmedUSRaw));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _exportDataForApplication.apply(this, arguments);\n}\n\nfunction compressionTest() {\n  return _compressionTest.apply(this, arguments);\n}\n\nfunction _compressionTest() {\n  _compressionTest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var confirmedGlobalRaw, confirmedUSRaw, confirmedRaw, locationPositions, _DataUtils$getVertexD, _DataUtils$getVertexD2, positions, locationIndices, locationWeights, _DataUtils$parseDataT, _DataUtils$parseDataT2, confirmedTextureData, totalDays, totalLocations, compressedPositions, compressedIndices, compressedWeights;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _CSVUtils.parseCSV)(\"./rawData/time_series_covid19_confirmed_global.csv\");\n\n          case 2:\n            confirmedGlobalRaw = _context2.sent;\n            _context2.t0 = _CSVUtils.aggregateUSDataToState;\n            _context2.next = 6;\n            return (0, _CSVUtils.parseCSV)(\"./rawData/time_series_covid19_confirmed_US.csv\");\n\n          case 6:\n            _context2.t1 = _context2.sent;\n            confirmedUSRaw = (0, _context2.t0)(_context2.t1);\n            confirmedRaw = confirmedGlobalRaw.concat(confirmedUSRaw); // do the calculations\n\n            locationPositions = _DataUtils.DataUtils.getPositionVectorsFromData(confirmedRaw);\n            _DataUtils$getVertexD = _DataUtils.DataUtils.getVertexData(locationPositions), _DataUtils$getVertexD2 = _slicedToArray(_DataUtils$getVertexD, 3), positions = _DataUtils$getVertexD2[0], locationIndices = _DataUtils$getVertexD2[1], locationWeights = _DataUtils$getVertexD2[2];\n            _DataUtils$parseDataT = _DataUtils.DataUtils.parseDataToTextureData(confirmedRaw), _DataUtils$parseDataT2 = _slicedToArray(_DataUtils$parseDataT, 3), confirmedTextureData = _DataUtils$parseDataT2[0], totalDays = _DataUtils$parseDataT2[1], totalLocations = _DataUtils$parseDataT2[2]; // test decompressed position data vs current\n\n            compressedPositions = (0, _Utils.compressForFile)(positions); // Uint16\n\n            compressedIndices = (0, _Utils.compressForFile)(locationIndices); // Uint16\n\n            compressedWeights = (0, _Utils.compressForFile)(locationWeights); // Float32\n\n            /*\n            await fs.writeFile(\n              \"./tests/testCompressedPositions.bin\",\n              compressedPositions,\n              err => {\n                if (err) throw err;\n                console.log(\"Compressed positions successfully written!\");\n              }\n            );\n            // save the uncompressed file for comparison\n            fs.writeFile(\"./tests/testPositions.bin\", positions, err => {\n              if (err) throw err;\n              console.log(\"Uncompressed positions successfully written!\");\n            });\n             await fs.writeFile(\n              \"./tests/testCompressedIndices.bin\",\n              compressedIndices,\n              err => {\n                if (err) throw err;\n                console.log(\"Compressed indices successfully written!\");\n              }\n            );\n             // save the uncompressed file for comparison\n            fs.writeFile(\"./tests/testIndices.bin\", locationIndices, err => {\n              if (err) throw err;\n              console.log(\"Uncompressed indices successfully written!\");\n            });\n             await fs.writeFile(\n              \"./tests/testCompressedWeights.bin\",\n              compressedWeights,\n              err => {\n                if (err) throw err;\n                console.log(\"Compressed weights successfully written!\");\n              }\n            );\n             // save the uncompressed file for comparison\n            fs.writeFile(\"./tests/testWeights.bin\", locationWeights, err => {\n              if (err) throw err;\n              console.log(\"Uncompressed weights successfully written!\");\n            });\n             */\n\n            _fs[\"default\"].readFile(\"./tests/testCompressedPositions.bin\", function (err, data) {\n              if (err) throw err;\n              var recoveredBuffer = (0, _pako.inflate)(data);\n              var recovered = new Uint16Array(recoveredBuffer.buffer);\n              console.log(\"compressedPositions successfully recovered: \".concat((0, _Utils.compareArrays)(recovered, positions)));\n            });\n\n            _fs[\"default\"].readFile(\"./tests/testCompressedIndices.bin\", function (err, data) {\n              if (err) throw err;\n              var recoveredBuffer = (0, _pako.inflate)(data);\n              var recovered = new Uint16Array(recoveredBuffer.buffer);\n              console.log(\"compressedIndices successfully recovered: \".concat((0, _Utils.compareArrays)(recovered, locationIndices)));\n            });\n\n            _fs[\"default\"].readFile(\"./tests/testCompressedWeights.bin\", function (err, data) {\n              if (err) throw err;\n              var recoveredBuffer = (0, _pako.inflate)(data);\n              var recovered = new Float32Array(recoveredBuffer.buffer);\n              console.log(\"compressedWeights successfully recovered: \".concat((0, _Utils.compareArrays)(recovered, locationWeights)));\n            });\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _compressionTest.apply(this, arguments);\n}\n\ncompressionTest();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "experiments.js"
      ],
      "names": [
        "exportDataForApplication",
        "confirmedUSRaw",
        "console",
        "log",
        "compressionTest",
        "confirmedGlobalRaw",
        "aggregateUSDataToState",
        "confirmedRaw",
        "concat",
        "locationPositions",
        "DataUtils",
        "getPositionVectorsFromData",
        "getVertexData",
        "positions",
        "locationIndices",
        "locationWeights",
        "parseDataToTextureData",
        "confirmedTextureData",
        "totalDays",
        "totalLocations",
        "compressedPositions",
        "compressedIndices",
        "compressedWeights",
        "fs",
        "readFile",
        "err",
        "data",
        "recoveredBuffer",
        "recovered",
        "Uint16Array",
        "buffer",
        "Float32Array"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;SAEeA,wB;;;;;sFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE+B,wBAC3B,gDAD2B,CAF/B;;AAAA;AAEQC,YAAAA,cAFR;AAKEC,YAAAA,OAAO,CAACC,GAAR,CAAY,sCAAuBF,cAAvB,CAAZ;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeG,e;;;;;6EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmC,wBAC/B,oDAD+B,CAFnC;;AAAA;AAEQC,YAAAA,kBAFR;AAAA,2BAKyBC,gCALzB;AAAA;AAAA,mBAMU,wBAAS,gDAAT,CANV;;AAAA;AAAA;AAKQL,YAAAA,cALR;AAQQM,YAAAA,YARR,GAQuBF,kBAAkB,CAACG,MAAnB,CAA0BP,cAA1B,CARvB,EAUE;;AACMQ,YAAAA,iBAXR,GAW4BC,qBAAUC,0BAAV,CAAqCJ,YAArC,CAX5B;AAAA,oCAYwDG,qBAAUE,aAAV,CACpDH,iBADoD,CAZxD,qEAYSI,SAZT,8BAYoBC,eAZpB,8BAYqCC,eAZrC;AAAA,oCAoBML,qBAAUM,sBAAV,CAAiCT,YAAjC,CApBN,qEAiBIU,oBAjBJ,8BAkBIC,SAlBJ,8BAmBIC,cAnBJ,8BAsBE;;AACMC,YAAAA,mBAvBR,GAuB8B,4BAAgBP,SAAhB,CAvB9B,EAuB0D;;AAClDQ,YAAAA,iBAxBR,GAwB4B,4BAAgBP,eAAhB,CAxB5B,EAwB8D;;AACtDQ,YAAAA,iBAzBR,GAyB4B,4BAAgBP,eAAhB,CAzB5B,EAyB8D;;AAE5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CAQ,2BAAGC,QAAH,CAAY,qCAAZ,EAAmD,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChE,kBAAID,GAAJ,EAAS,MAAMA,GAAN;AAET,kBAAME,eAAe,GAAG,mBAAQD,IAAR,CAAxB;AACA,kBAAME,SAAS,GAAG,IAAIC,WAAJ,CAAgBF,eAAe,CAACG,MAAhC,CAAlB;AACA5B,cAAAA,OAAO,CAACC,GAAR,uDACiD,0BAC7CyB,SAD6C,EAE7Cf,SAF6C,CADjD;AAMD,aAXD;;AAaAU,2BAAGC,QAAH,CAAY,mCAAZ,EAAiD,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9D,kBAAID,GAAJ,EAAS,MAAMA,GAAN;AAET,kBAAME,eAAe,GAAG,mBAAQD,IAAR,CAAxB;AACA,kBAAME,SAAS,GAAG,IAAIC,WAAJ,CAAgBF,eAAe,CAACG,MAAhC,CAAlB;AACA5B,cAAAA,OAAO,CAACC,GAAR,qDAC+C,0BAC3CyB,SAD2C,EAE3Cd,eAF2C,CAD/C;AAMD,aAXD;;AAaAS,2BAAGC,QAAH,CAAY,mCAAZ,EAAiD,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9D,kBAAID,GAAJ,EAAS,MAAMA,GAAN;AAET,kBAAME,eAAe,GAAG,mBAAQD,IAAR,CAAxB;AACA,kBAAME,SAAS,GAAG,IAAIG,YAAJ,CAAiBJ,eAAe,CAACG,MAAjC,CAAlB;AACA5B,cAAAA,OAAO,CAACC,GAAR,qDAC+C,0BAC3CyB,SAD2C,EAE3Cb,eAF2C,CAD/C;AAMD,aAXD;;AApGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkHAX,eAAe",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport { inflate } from \"pako\";\nimport {\n  parseCSV,\n  createPlaceholderData,\n  createStateDataObject,\n  aggregateUSDataToState\n} from \"./src/CSVUtils\";\nimport { DataUtils } from \"./src/DataUtils\";\nimport { compareArrays, compressForFile } from \"./src/Utils\";\n\nasync function exportDataForApplication() {\n  // read csv US data and aggregate to state data test\n  const confirmedUSRaw = await parseCSV(\n    \"./rawData/time_series_covid19_confirmed_US.csv\"\n  );\n  console.log(aggregateUSDataToState(confirmedUSRaw));\n}\n\nasync function compressionTest() {\n  // get some real data into the system\n  const confirmedGlobalRaw = await parseCSV(\n    \"./rawData/time_series_covid19_confirmed_global.csv\"\n  );\n  const confirmedUSRaw = aggregateUSDataToState(\n    await parseCSV(\"./rawData/time_series_covid19_confirmed_US.csv\")\n  );\n  const confirmedRaw = confirmedGlobalRaw.concat(confirmedUSRaw);\n\n  // do the calculations\n  const locationPositions = DataUtils.getPositionVectorsFromData(confirmedRaw);\n  const [positions, locationIndices, locationWeights] = DataUtils.getVertexData(\n    locationPositions\n  );\n\n  const [\n    confirmedTextureData,\n    totalDays,\n    totalLocations\n  ] = DataUtils.parseDataToTextureData(confirmedRaw);\n\n  // test decompressed position data vs current\n  const compressedPositions = compressForFile(positions); // Uint16\n  const compressedIndices = compressForFile(locationIndices); // Uint16\n  const compressedWeights = compressForFile(locationWeights); // Float32\n\n  /*\n  await fs.writeFile(\n    \"./tests/testCompressedPositions.bin\",\n    compressedPositions,\n    err => {\n      if (err) throw err;\n      console.log(\"Compressed positions successfully written!\");\n    }\n  );\n  // save the uncompressed file for comparison\n  fs.writeFile(\"./tests/testPositions.bin\", positions, err => {\n    if (err) throw err;\n    console.log(\"Uncompressed positions successfully written!\");\n  });\n\n  await fs.writeFile(\n    \"./tests/testCompressedIndices.bin\",\n    compressedIndices,\n    err => {\n      if (err) throw err;\n      console.log(\"Compressed indices successfully written!\");\n    }\n  );\n\n  // save the uncompressed file for comparison\n  fs.writeFile(\"./tests/testIndices.bin\", locationIndices, err => {\n    if (err) throw err;\n    console.log(\"Uncompressed indices successfully written!\");\n  });\n\n  await fs.writeFile(\n    \"./tests/testCompressedWeights.bin\",\n    compressedWeights,\n    err => {\n      if (err) throw err;\n      console.log(\"Compressed weights successfully written!\");\n    }\n  );\n\n  // save the uncompressed file for comparison\n  fs.writeFile(\"./tests/testWeights.bin\", locationWeights, err => {\n    if (err) throw err;\n    console.log(\"Uncompressed weights successfully written!\");\n  });\n\n  */\n\n  fs.readFile(\"./tests/testCompressedPositions.bin\", (err, data) => {\n    if (err) throw err;\n\n    const recoveredBuffer = inflate(data);\n    const recovered = new Uint16Array(recoveredBuffer.buffer);\n    console.log(\n      `compressedPositions successfully recovered: ${compareArrays(\n        recovered,\n        positions\n      )}`\n    );\n  });\n\n  fs.readFile(\"./tests/testCompressedIndices.bin\", (err, data) => {\n    if (err) throw err;\n\n    const recoveredBuffer = inflate(data);\n    const recovered = new Uint16Array(recoveredBuffer.buffer);\n    console.log(\n      `compressedIndices successfully recovered: ${compareArrays(\n        recovered,\n        locationIndices\n      )}`\n    );\n  });\n\n  fs.readFile(\"./tests/testCompressedWeights.bin\", (err, data) => {\n    if (err) throw err;\n\n    const recoveredBuffer = inflate(data);\n    const recovered = new Float32Array(recoveredBuffer.buffer);\n    console.log(\n      `compressedWeights successfully recovered: ${compareArrays(\n        recovered,\n        locationWeights\n      )}`\n    );\n  });\n}\n\ncompressionTest();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585821562992
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/CSVUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/CSVUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/CSVUtils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/CSVUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
        "sourceFileName": "CSVUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseCSV = parseCSV;\nexports.normalizeKeys = normalizeKeys;\nexports.createStateDataObject = createStateDataObject;\nexports.aggregateUSDataToState = aggregateUSDataToState;\nexports.addStateLatLong = addStateLatLong;\nexports.removeUSCountryValues = removeUSCountryValues;\nexports.createPlaceholderData = createPlaceholderData;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _csvParser = _interopRequireDefault(require(\"csv-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction parseCSV(_x) {\n  return _parseCSV.apply(this, arguments);\n}\n\nfunction _parseCSV() {\n  _parseCSV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(path) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var csvData = [];\n\n              _fs[\"default\"].createReadStream(path).pipe((0, _csvParser[\"default\"])()).on(\"data\", function (data) {\n                // add Lat and Long coords for the US states because they kindly didn't put those in for some reason...\n                if (data.Admin2 === \"Unassigned\") {\n                  addStateLatLong(data);\n                } // remove currently unneeded fields\n\n\n                if (data.UID) {\n                  delete data.UID;\n                  delete data.iso2;\n                  delete data.iso3;\n                  delete data.code3;\n                  delete data.FIPS;\n                  delete data.Admin2;\n                  delete data.Combined_Key;\n                }\n\n                var normalizedData = normalizeKeys(data);\n                csvData.push(normalizedData);\n              }).on(\"end\", function () {\n                console.log(\"\".concat(path, \" read successfully.\"));\n                resolve(csvData);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseCSV.apply(this, arguments);\n}\n\nfunction normalizeKeys(obj) {\n  var normalizedObject = {};\n  Object.keys(obj).forEach(function (key) {\n    if (key === \"Long_\") {\n      var newPair = {\n        Long: obj[\"Long_\"]\n      };\n      normalizedObject = _objectSpread({}, normalizedObject, {}, newPair);\n      return;\n    }\n\n    if (key === \"Province/State\") {\n      var _newPair = {\n        Province_State: obj[\"Province/State\"]\n      };\n      normalizedObject = _objectSpread({}, normalizedObject, {}, _newPair);\n      return;\n    }\n\n    if (key === \"Country/Region\") {\n      var _newPair2 = {\n        Country_Region: obj[\"Country/Region\"]\n      };\n      normalizedObject = _objectSpread({}, normalizedObject, {}, _newPair2);\n      return;\n    } // sort out date issues\n\n\n    if (key.match(/^\\d{1,2}\\/\\d{1,2}\\/\\d{2}$/)) {\n      // add in the thousands\n      var newKey = key.slice(0, -2) + \"20\" + key.slice(-2);\n\n      var _newPair3 = _defineProperty({}, newKey, obj[key]);\n\n      normalizedObject = _objectSpread({}, normalizedObject, {}, _newPair3);\n      return;\n    }\n\n    normalizedObject = _objectSpread({}, normalizedObject, _defineProperty({}, key, obj[key]));\n  });\n  return normalizedObject;\n}\n\nfunction createStateDataObject() {\n  var stateData = [{\n    Province_State: \"Alabama\"\n  }, {\n    Province_State: \"Alaska\"\n  }, {\n    Province_State: \"Arizona\"\n  }, {\n    Province_State: \"Arkansas\"\n  }, {\n    Province_State: \"California\"\n  }, {\n    Province_State: \"Colorado\"\n  }, {\n    Province_State: \"Connecticut\"\n  }, {\n    Province_State: \"Delaware\"\n  }, {\n    Province_State: \"District of Columbia\"\n  }, {\n    Province_State: \"Florida\"\n  }, {\n    Province_State: \"Georgia\"\n  }, {\n    Province_State: \"Hawaii\"\n  }, {\n    Province_State: \"Idaho\"\n  }, {\n    Province_State: \"Illinois\"\n  }, {\n    Province_State: \"Indiana\"\n  }, {\n    Province_State: \"Iowa\"\n  }, {\n    Province_State: \"Kansas\"\n  }, {\n    Province_State: \"Kentucky\"\n  }, {\n    Province_State: \"Louisiana\"\n  }, {\n    Province_State: \"Maine\"\n  }, {\n    Province_State: \"Maryland\"\n  }, {\n    Province_State: \"Massachusetts\"\n  }, {\n    Province_State: \"Michigan\"\n  }, {\n    Province_State: \"Minnesota\"\n  }, {\n    Province_State: \"Mississippi\"\n  }, {\n    Province_State: \"Missouri\"\n  }, {\n    Province_State: \"Montana\"\n  }, {\n    Province_State: \"Nebraska\"\n  }, {\n    Province_State: \"Nevada\"\n  }, {\n    Province_State: \"New Hampshire\"\n  }, {\n    Province_State: \"New Jersey\"\n  }, {\n    Province_State: \"New Mexico\"\n  }, {\n    Province_State: \"New York\"\n  }, {\n    Province_State: \"North Carolina\"\n  }, {\n    Province_State: \"North Dakota\"\n  }, {\n    Province_State: \"Ohio\"\n  }, {\n    Province_State: \"Oklahoma\"\n  }, {\n    Province_State: \"Oregon\"\n  }, {\n    Province_State: \"Pennsylvania\"\n  }, {\n    Province_State: \"Rhode Island\"\n  }, {\n    Province_State: \"South Carolina\"\n  }, {\n    Province_State: \"South Dakota\"\n  }, {\n    Province_State: \"Tennessee\"\n  }, {\n    Province_State: \"Texas\"\n  }, {\n    Province_State: \"Utah\"\n  }, {\n    Province_State: \"Vermont\"\n  }, {\n    Province_State: \"Virginia\"\n  }, {\n    Province_State: \"Washington\"\n  }, {\n    Province_State: \"West Virginia\"\n  }, {\n    Province_State: \"Wisconsin\"\n  }, {\n    Province_State: \"Wyoming\"\n  }];\n  stateData.forEach(function (state) {\n    return state.Country_Region = \"US\";\n  });\n  stateData.forEach(function (state) {\n    return addStateLatLong(state);\n  });\n  return stateData;\n}\n\nfunction aggregateUSDataToState(csvData) {\n  var stateData = createStateDataObject();\n  csvData.forEach(function (location) {\n    var found = false;\n    stateData.forEach(function (state) {\n      if (state.Province_State !== location.Province_State) return;\n      found = true;\n      var dates = Object.keys(location).filter(function (key) {\n        return /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(key);\n      });\n      dates.forEach(function (date) {\n        if (state[date]) state[date] += Number(location[date]);else state[date] = Number(location[date]);\n      });\n    });\n    if (found) return;\n    console.log(\"\".concat(location.Province_State, \" not found in US state list, adding as new entry...\"));\n    stateData.push(location);\n  });\n  return stateData;\n}\n\nfunction addStateLatLong(obj) {\n  switch (obj.Province_State) {\n    case \"Alabama\":\n      obj.Lat = 32.31823;\n      obj.Long = -86.902298;\n      break;\n\n    case \"Alaska\":\n      obj.Lat = 66.160507;\n      obj.Long = -153.369141;\n      break;\n\n    case \"Arizona\":\n      obj.Lat = 34.048927;\n      obj.Long = -111.093735;\n      break;\n\n    case \"Arkansas\":\n      obj.Lat = 34.799999;\n      obj.Long = -92.199997;\n      break;\n\n    case \"California\":\n      obj.Lat = 36.778259;\n      obj.Long = -119.417931;\n      break;\n\n    case \"Colorado\":\n      obj.Lat = 39.113014;\n      obj.Long = -105.358887;\n      break;\n\n    case \"Connecticut\":\n      obj.Lat = 41.599998;\n      obj.Long = -72.699997;\n      break;\n\n    case \"Delaware\":\n      obj.Lat = 39.0;\n      obj.Long = -75.5;\n      break;\n\n    case \"District of Columbia\":\n      obj.Lat = 38.9072;\n      obj.Long = -77.0369;\n      break;\n\n    case \"Florida\":\n      obj.Lat = 27.994402;\n      obj.Long = -81.760254;\n      break;\n\n    case \"Georgia\":\n      obj.Lat = 33.247875;\n      obj.Long = -83.441162;\n      break;\n\n    case \"Hawaii\":\n      obj.Lat = 19.741755;\n      obj.Long = -155.844437;\n      break;\n\n    case \"Idaho\":\n      obj.Lat = 44.068203;\n      obj.Long = -114.742043;\n      break;\n\n    case \"Illinois\":\n      obj.Lat = 40.0;\n      obj.Long = -89.0;\n      break;\n\n    case \"Indiana\":\n      obj.Lat = 40.273502;\n      obj.Long = -86.126976;\n      break;\n\n    case \"Iowa\":\n      obj.Lat = 42.032974;\n      obj.Long = -93.581543;\n      break;\n\n    case \"Kansas\":\n      obj.Lat = 38.5;\n      obj.Long = -98.0;\n      break;\n\n    case \"Kentucky\":\n      obj.Lat = 37.839333;\n      obj.Long = -84.27002;\n      break;\n\n    case \"Louisiana\":\n      obj.Lat = 30.39183;\n      obj.Long = -92.329102;\n      break;\n\n    case \"Maine\":\n      obj.Lat = 45.367584;\n      obj.Long = -68.972168;\n      break;\n\n    case \"Maryland\":\n      obj.Lat = 39.045753;\n      obj.Long = -76.641273;\n      break;\n\n    case \"Massachusetts\":\n      obj.Lat = 42.407211;\n      obj.Long = -71.382439;\n      break;\n\n    case \"Michigan\":\n      obj.Lat = 44.182205;\n      obj.Long = -84.506836;\n      break;\n\n    case \"Minnesota\":\n      obj.Lat = 46.39241;\n      obj.Long = -94.63623;\n      break;\n\n    case \"Mississippi\":\n      obj.Lat = 33.0;\n      obj.Long = -90.0;\n      break;\n\n    case \"Missouri\":\n      obj.Lat = 38.573936;\n      obj.Long = -92.60376;\n      break;\n\n    case \"Montana\":\n      obj.Lat = 46.96526;\n      obj.Long = -109.533691;\n      break;\n\n    case \"Nebraska\":\n      obj.Lat = 41.5;\n      obj.Long = -100.0;\n      break;\n\n    case \"Nevada\":\n      obj.Lat = 39.876019;\n      obj.Long = -117.224121;\n      break;\n\n    case \"New Hampshire\":\n      obj.Lat = 44.0;\n      obj.Long = -71.5;\n      break;\n\n    case \"New Jersey\":\n      obj.Lat = 39.833851;\n      obj.Long = -74.871826;\n      break;\n\n    case \"New Mexico\":\n      obj.Lat = 34.307144;\n      obj.Long = -106.018066;\n      break;\n\n    case \"New York\":\n      obj.Lat = 43.0;\n      obj.Long = -75.0;\n      break;\n\n    case \"North Carolina\":\n      obj.Lat = 35.782169;\n      obj.Long = -80.793457;\n      break;\n\n    case \"North Dakota\":\n      obj.Lat = 47.650589;\n      obj.Long = -100.437012;\n      break;\n\n    case \"Ohio\":\n      obj.Lat = 40.367474;\n      obj.Long = -82.996216;\n      break;\n\n    case \"Oklahoma\":\n      obj.Lat = 36.084621;\n      obj.Long = -96.921387;\n      break;\n\n    case \"Oregon\":\n      obj.Lat = 44.0;\n      obj.Long = -120.5;\n      break;\n\n    case \"Pennsylvania\":\n      obj.Lat = 41.203323;\n      obj.Long = -77.194527;\n      break;\n\n    case \"Rhode Island\":\n      obj.Lat = 41.700001;\n      obj.Long = -71.5;\n      break;\n\n    case \"South Carolina\":\n      obj.Lat = 33.836082;\n      obj.Long = -81.163727;\n      break;\n\n    case \"South Dakota\":\n      obj.Lat = 44.5;\n      obj.Long = -100.0;\n      break;\n\n    case \"Tennessee\":\n      obj.Lat = 35.860119;\n      obj.Long = -86.660156;\n      break;\n\n    case \"Texas\":\n      obj.Lat = 31.0;\n      obj.Long = -100.0;\n      break;\n\n    case \"Utah\":\n      obj.Lat = 39.41922;\n      obj.Long = -111.950684;\n      break;\n\n    case \"Vermont\":\n      obj.Lat = 44.0;\n      obj.Long = -72.699997;\n      break;\n\n    case \"Virginia\":\n      obj.Lat = 37.926868;\n      obj.Long = -78.024902;\n      break;\n\n    case \"Washington\":\n      obj.Lat = 47.751076;\n      obj.Long = -120.740135;\n      break;\n\n    case \"West Virginia\":\n      obj.Lat = 39.0;\n      obj.Long = -80.5;\n      break;\n\n    case \"Wisconsin\":\n      obj.Lat = 44.5;\n      obj.Long = -89.5;\n      break;\n\n    case \"Wyoming\":\n      obj.Lat = 43.07597;\n      obj.Long = -107.290283;\n      break;\n\n    default:\n      console.log(\"not found\");\n  }\n}\n\nfunction removeUSCountryValues(data) {\n  data.forEach(function (entry) {\n    if (!entry.Province_State && entry.Country_Region === \"US\") {\n      console.log(\"US county data found, setting all values to 0 for US global data to avoid data doubling...\");\n      var keys = Object.keys(entry).slice(4);\n      keys.forEach(function (key) {\n        entry[key] = 0;\n      });\n    }\n  });\n}\n\nfunction createPlaceholderData(data) {\n  data.forEach(function (entry) {\n    var keys = Object.keys(entry).slice(4);\n    keys.forEach(function (key) {\n      entry[key] = 0;\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "CSVUtils.js"
      ],
      "names": [
        "parseCSV",
        "path",
        "Promise",
        "resolve",
        "reject",
        "csvData",
        "fs",
        "createReadStream",
        "pipe",
        "on",
        "data",
        "Admin2",
        "addStateLatLong",
        "UID",
        "iso2",
        "iso3",
        "code3",
        "FIPS",
        "Combined_Key",
        "normalizedData",
        "normalizeKeys",
        "push",
        "console",
        "log",
        "obj",
        "normalizedObject",
        "Object",
        "keys",
        "forEach",
        "key",
        "newPair",
        "Long",
        "Province_State",
        "Country_Region",
        "match",
        "newKey",
        "slice",
        "createStateDataObject",
        "stateData",
        "state",
        "aggregateUSDataToState",
        "location",
        "found",
        "dates",
        "filter",
        "test",
        "date",
        "Number",
        "Lat",
        "removeUSCountryValues",
        "entry",
        "createPlaceholderData"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport csvParser from \"csv-parser\";\n\nexport async function parseCSV(path) {\n  return new Promise((resolve, reject) => {\n    const csvData = [];\n    fs.createReadStream(path)\n      .pipe(csvParser())\n      .on(\"data\", data => {\n        // add Lat and Long coords for the US states because they kindly didn't put those in for some reason...\n        if (data.Admin2 === \"Unassigned\") {\n          addStateLatLong(data);\n        }\n        // remove currently unneeded fields\n        if (data.UID) {\n          delete data.UID;\n          delete data.iso2;\n          delete data.iso3;\n          delete data.code3;\n          delete data.FIPS;\n          delete data.Admin2;\n          delete data.Combined_Key;\n        }\n        const normalizedData = normalizeKeys(data);\n        csvData.push(normalizedData);\n      })\n      .on(\"end\", () => {\n        console.log(`${path} read successfully.`);\n        resolve(csvData);\n      });\n  });\n}\n\nexport function normalizeKeys(obj) {\n  let normalizedObject = {};\n  Object.keys(obj).forEach(key => {\n    if (key === \"Long_\") {\n      let newPair = { Long: obj[\"Long_\"] };\n      normalizedObject = { ...normalizedObject, ...newPair };\n      return;\n    }\n    if (key === \"Province/State\") {\n      let newPair = { Province_State: obj[\"Province/State\"] };\n      normalizedObject = { ...normalizedObject, ...newPair };\n      return;\n    }\n    if (key === \"Country/Region\") {\n      let newPair = { Country_Region: obj[\"Country/Region\"] };\n      normalizedObject = { ...normalizedObject, ...newPair };\n      return;\n    }\n    // sort out date issues\n    if (key.match(/^\\d{1,2}\\/\\d{1,2}\\/\\d{2}$/)) {\n      // add in the thousands\n      const newKey = key.slice(0, -2) + \"20\" + key.slice(-2);\n      let newPair = { [newKey]: obj[key] };\n      normalizedObject = { ...normalizedObject, ...newPair };\n      return;\n    }\n    normalizedObject = { ...normalizedObject, [key]: obj[key] };\n  });\n  return normalizedObject;\n}\n\nexport function createStateDataObject() {\n  const stateData = [\n    { Province_State: \"Alabama\" },\n    { Province_State: \"Alaska\" },\n    { Province_State: \"Arizona\" },\n    { Province_State: \"Arkansas\" },\n    { Province_State: \"California\" },\n    { Province_State: \"Colorado\" },\n    { Province_State: \"Connecticut\" },\n    { Province_State: \"Delaware\" },\n    { Province_State: \"District of Columbia\" },\n    { Province_State: \"Florida\" },\n    { Province_State: \"Georgia\" },\n    { Province_State: \"Hawaii\" },\n    { Province_State: \"Idaho\" },\n    { Province_State: \"Illinois\" },\n    { Province_State: \"Indiana\" },\n    { Province_State: \"Iowa\" },\n    { Province_State: \"Kansas\" },\n    { Province_State: \"Kentucky\" },\n    { Province_State: \"Louisiana\" },\n    { Province_State: \"Maine\" },\n    { Province_State: \"Maryland\" },\n    { Province_State: \"Massachusetts\" },\n    { Province_State: \"Michigan\" },\n    { Province_State: \"Minnesota\" },\n    { Province_State: \"Mississippi\" },\n    { Province_State: \"Missouri\" },\n    { Province_State: \"Montana\" },\n    { Province_State: \"Nebraska\" },\n    { Province_State: \"Nevada\" },\n    { Province_State: \"New Hampshire\" },\n    { Province_State: \"New Jersey\" },\n    { Province_State: \"New Mexico\" },\n    { Province_State: \"New York\" },\n    { Province_State: \"North Carolina\" },\n    { Province_State: \"North Dakota\" },\n    { Province_State: \"Ohio\" },\n    { Province_State: \"Oklahoma\" },\n    { Province_State: \"Oregon\" },\n    { Province_State: \"Pennsylvania\" },\n    { Province_State: \"Rhode Island\" },\n    { Province_State: \"South Carolina\" },\n    { Province_State: \"South Dakota\" },\n    { Province_State: \"Tennessee\" },\n    { Province_State: \"Texas\" },\n    { Province_State: \"Utah\" },\n    { Province_State: \"Vermont\" },\n    { Province_State: \"Virginia\" },\n    { Province_State: \"Washington\" },\n    { Province_State: \"West Virginia\" },\n    { Province_State: \"Wisconsin\" },\n    { Province_State: \"Wyoming\" }\n  ];\n  stateData.forEach(state => (state.Country_Region = \"US\"));\n  stateData.forEach(state => addStateLatLong(state));\n  return stateData;\n}\n\nexport function aggregateUSDataToState(csvData) {\n  const stateData = createStateDataObject();\n  csvData.forEach(location => {\n    let found = false;\n    stateData.forEach(state => {\n      if (state.Province_State !== location.Province_State) return;\n      found = true;\n      const dates = Object.keys(location).filter(key =>\n        /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(key)\n      );\n      dates.forEach(date => {\n        if (state[date]) state[date] += Number(location[date]);\n        else state[date] = Number(location[date]);\n      });\n    });\n    if (found) return;\n    console.log(\n      `${location.Province_State} not found in US state list, adding as new entry...`\n    );\n    stateData.push(location);\n  });\n  return stateData;\n}\n\nexport function addStateLatLong(obj) {\n  switch (obj.Province_State) {\n    case \"Alabama\":\n      obj.Lat = 32.31823;\n      obj.Long = -86.902298;\n      break;\n    case \"Alaska\":\n      obj.Lat = 66.160507;\n      obj.Long = -153.369141;\n      break;\n    case \"Arizona\":\n      obj.Lat = 34.048927;\n      obj.Long = -111.093735;\n      break;\n    case \"Arkansas\":\n      obj.Lat = 34.799999;\n      obj.Long = -92.199997;\n      break;\n    case \"California\":\n      obj.Lat = 36.778259;\n      obj.Long = -119.417931;\n      break;\n    case \"Colorado\":\n      obj.Lat = 39.113014;\n      obj.Long = -105.358887;\n      break;\n    case \"Connecticut\":\n      obj.Lat = 41.599998;\n      obj.Long = -72.699997;\n      break;\n    case \"Delaware\":\n      obj.Lat = 39.0;\n      obj.Long = -75.5;\n      break;\n    case \"District of Columbia\":\n      obj.Lat = 38.9072;\n      obj.Long = -77.0369;\n      break;\n    case \"Florida\":\n      obj.Lat = 27.994402;\n      obj.Long = -81.760254;\n      break;\n    case \"Georgia\":\n      obj.Lat = 33.247875;\n      obj.Long = -83.441162;\n      break;\n    case \"Hawaii\":\n      obj.Lat = 19.741755;\n      obj.Long = -155.844437;\n      break;\n    case \"Idaho\":\n      obj.Lat = 44.068203;\n      obj.Long = -114.742043;\n      break;\n    case \"Illinois\":\n      obj.Lat = 40.0;\n      obj.Long = -89.0;\n      break;\n    case \"Indiana\":\n      obj.Lat = 40.273502;\n      obj.Long = -86.126976;\n      break;\n    case \"Iowa\":\n      obj.Lat = 42.032974;\n      obj.Long = -93.581543;\n      break;\n    case \"Kansas\":\n      obj.Lat = 38.5;\n      obj.Long = -98.0;\n      break;\n    case \"Kentucky\":\n      obj.Lat = 37.839333;\n      obj.Long = -84.27002;\n      break;\n    case \"Louisiana\":\n      obj.Lat = 30.39183;\n      obj.Long = -92.329102;\n      break;\n    case \"Maine\":\n      obj.Lat = 45.367584;\n      obj.Long = -68.972168;\n      break;\n    case \"Maryland\":\n      obj.Lat = 39.045753;\n      obj.Long = -76.641273;\n      break;\n    case \"Massachusetts\":\n      obj.Lat = 42.407211;\n      obj.Long = -71.382439;\n      break;\n    case \"Michigan\":\n      obj.Lat = 44.182205;\n      obj.Long = -84.506836;\n      break;\n    case \"Minnesota\":\n      obj.Lat = 46.39241;\n      obj.Long = -94.63623;\n      break;\n    case \"Mississippi\":\n      obj.Lat = 33.0;\n      obj.Long = -90.0;\n      break;\n    case \"Missouri\":\n      obj.Lat = 38.573936;\n      obj.Long = -92.60376;\n      break;\n    case \"Montana\":\n      obj.Lat = 46.96526;\n      obj.Long = -109.533691;\n      break;\n    case \"Nebraska\":\n      obj.Lat = 41.5;\n      obj.Long = -100.0;\n      break;\n    case \"Nevada\":\n      obj.Lat = 39.876019;\n      obj.Long = -117.224121;\n      break;\n    case \"New Hampshire\":\n      obj.Lat = 44.0;\n      obj.Long = -71.5;\n      break;\n    case \"New Jersey\":\n      obj.Lat = 39.833851;\n      obj.Long = -74.871826;\n      break;\n    case \"New Mexico\":\n      obj.Lat = 34.307144;\n      obj.Long = -106.018066;\n      break;\n    case \"New York\":\n      obj.Lat = 43.0;\n      obj.Long = -75.0;\n      break;\n    case \"North Carolina\":\n      obj.Lat = 35.782169;\n      obj.Long = -80.793457;\n      break;\n    case \"North Dakota\":\n      obj.Lat = 47.650589;\n      obj.Long = -100.437012;\n      break;\n    case \"Ohio\":\n      obj.Lat = 40.367474;\n      obj.Long = -82.996216;\n      break;\n    case \"Oklahoma\":\n      obj.Lat = 36.084621;\n      obj.Long = -96.921387;\n      break;\n    case \"Oregon\":\n      obj.Lat = 44.0;\n      obj.Long = -120.5;\n      break;\n    case \"Pennsylvania\":\n      obj.Lat = 41.203323;\n      obj.Long = -77.194527;\n      break;\n    case \"Rhode Island\":\n      obj.Lat = 41.700001;\n      obj.Long = -71.5;\n      break;\n    case \"South Carolina\":\n      obj.Lat = 33.836082;\n      obj.Long = -81.163727;\n      break;\n    case \"South Dakota\":\n      obj.Lat = 44.5;\n      obj.Long = -100.0;\n      break;\n    case \"Tennessee\":\n      obj.Lat = 35.860119;\n      obj.Long = -86.660156;\n      break;\n    case \"Texas\":\n      obj.Lat = 31.0;\n      obj.Long = -100.0;\n      break;\n    case \"Utah\":\n      obj.Lat = 39.41922;\n      obj.Long = -111.950684;\n      break;\n    case \"Vermont\":\n      obj.Lat = 44.0;\n      obj.Long = -72.699997;\n      break;\n    case \"Virginia\":\n      obj.Lat = 37.926868;\n      obj.Long = -78.024902;\n      break;\n    case \"Washington\":\n      obj.Lat = 47.751076;\n      obj.Long = -120.740135;\n      break;\n    case \"West Virginia\":\n      obj.Lat = 39.0;\n      obj.Long = -80.5;\n      break;\n    case \"Wisconsin\":\n      obj.Lat = 44.5;\n      obj.Long = -89.5;\n      break;\n    case \"Wyoming\":\n      obj.Lat = 43.07597;\n      obj.Long = -107.290283;\n      break;\n    default:\n      console.log(\"not found\");\n  }\n}\n\nexport function removeUSCountryValues(data) {\n  data.forEach(entry => {\n    if (!entry.Province_State && entry.Country_Region === \"US\") {\n      console.log(\n        `US county data found, setting all values to 0 for US global data to avoid data doubling...`\n      );\n      const keys = Object.keys(entry).slice(4);\n\n      keys.forEach(key => {\n        entry[key] = 0;\n      });\n    }\n  });\n}\n\nexport function createPlaceholderData(data) {\n  data.forEach(entry => {\n    const keys = Object.keys(entry).slice(4);\n\n    keys.forEach(key => {\n      entry[key] = 0;\n    });\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585832938902
  },
  "{\"sourceRoot\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"filename\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/Utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/Utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/Utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/Utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
        "sourceFileName": "Utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compressForFile = compressForFile;\nexports.compareArrays = compareArrays;\n\nvar _pako = require(\"pako\");\n\nfunction compressForFile(typedArray) {\n  var dataView = new DataView(typedArray.buffer);\n  var dataToCompress = new Uint8Array(dataView.buffer);\n  return (0, _pako.deflate)(dataToCompress);\n}\n\nfunction compareArrays(arr1, arr2) {\n  return arr1.every(function (value, index) {\n    return value === arr2[index];\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWxzLmpzIl0sIm5hbWVzIjpbImNvbXByZXNzRm9yRmlsZSIsInR5cGVkQXJyYXkiLCJkYXRhVmlldyIsIkRhdGFWaWV3IiwiYnVmZmVyIiwiZGF0YVRvQ29tcHJlc3MiLCJVaW50OEFycmF5IiwiY29tcGFyZUFycmF5cyIsImFycjEiLCJhcnIyIiwiZXZlcnkiLCJ2YWx1ZSIsImluZGV4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUVPLFNBQVNBLGVBQVQsQ0FBeUJDLFVBQXpCLEVBQXFDO0FBQzFDLE1BQU1DLFFBQVEsR0FBRyxJQUFJQyxRQUFKLENBQWFGLFVBQVUsQ0FBQ0csTUFBeEIsQ0FBakI7QUFDQSxNQUFNQyxjQUFjLEdBQUcsSUFBSUMsVUFBSixDQUFlSixRQUFRLENBQUNFLE1BQXhCLENBQXZCO0FBQ0EsU0FBTyxtQkFBUUMsY0FBUixDQUFQO0FBQ0Q7O0FBRU0sU0FBU0UsYUFBVCxDQUF1QkMsSUFBdkIsRUFBNkJDLElBQTdCLEVBQW1DO0FBQ3hDLFNBQU9ELElBQUksQ0FBQ0UsS0FBTCxDQUFXLFVBQUNDLEtBQUQsRUFBUUMsS0FBUjtBQUFBLFdBQWtCRCxLQUFLLEtBQUtGLElBQUksQ0FBQ0csS0FBRCxDQUFoQztBQUFBLEdBQVgsQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYXRyaWNrbmFzcmFsbGEvV2Vic3Rvcm1Qcm9qZWN0cy9jb3JvbmF2aXJ1c192aXN1YWxpc2F0aW9uL2RhdGF0b29sL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZsYXRlIH0gZnJvbSBcInBha29cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXByZXNzRm9yRmlsZSh0eXBlZEFycmF5KSB7XG4gIGNvbnN0IGRhdGFWaWV3ID0gbmV3IERhdGFWaWV3KHR5cGVkQXJyYXkuYnVmZmVyKTtcbiAgY29uc3QgZGF0YVRvQ29tcHJlc3MgPSBuZXcgVWludDhBcnJheShkYXRhVmlldy5idWZmZXIpO1xuICByZXR1cm4gZGVmbGF0ZShkYXRhVG9Db21wcmVzcyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlQXJyYXlzKGFycjEsIGFycjIpIHtcbiAgcmV0dXJuIGFycjEuZXZlcnkoKHZhbHVlLCBpbmRleCkgPT4gdmFsdWUgPT09IGFycjJbaW5kZXhdKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Utils.js"
      ],
      "names": [
        "compressForFile",
        "typedArray",
        "dataView",
        "DataView",
        "buffer",
        "dataToCompress",
        "Uint8Array",
        "compareArrays",
        "arr1",
        "arr2",
        "every",
        "value",
        "index"
      ],
      "mappings": ";;;;;;;;AAAA;;AAEO,SAASA,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaF,UAAU,CAACG,MAAxB,CAAjB;AACA,MAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeJ,QAAQ,CAACE,MAAxB,CAAvB;AACA,SAAO,mBAAQC,cAAR,CAAP;AACD;;AAEM,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACxC,SAAOD,IAAI,CAACE,KAAL,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WAAkBD,KAAK,KAAKF,IAAI,CAACG,KAAD,CAAhC;AAAA,GAAX,CAAP;AACD",
      "sourceRoot": "/Users/patricknasralla/WebstormProjects/coronavirus_visualisation/datatool/src/",
      "sourcesContent": [
        "import { deflate } from \"pako\";\n\nexport function compressForFile(typedArray) {\n  const dataView = new DataView(typedArray.buffer);\n  const dataToCompress = new Uint8Array(dataView.buffer);\n  return deflate(dataToCompress);\n}\n\nexport function compareArrays(arr1, arr2) {\n  return arr1.every((value, index) => value === arr2[index]);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585832938903
  }
}